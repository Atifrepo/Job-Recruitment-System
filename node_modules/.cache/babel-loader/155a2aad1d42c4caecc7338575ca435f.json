{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _simpleAssign = require('simple-assign');\n\nvar _simpleAssign2 = _interopRequireDefault(_simpleAssign);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _autoPrefix = require('../utils/autoPrefix');\n\nvar _autoPrefix2 = _interopRequireDefault(_autoPrefix);\n\nvar _transitions = require('../styles/transitions');\n\nvar _transitions2 = _interopRequireDefault(_transitions);\n\nvar _Paper = require('../Paper');\n\nvar _Paper2 = _interopRequireDefault(_Paper);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar VIEWBOX_SIZE = 32;\n\nfunction getStyles(props) {\n  var padding = props.size * 0.1; // same implementation of `this.getPaddingSize()`\n\n  return {\n    root: {\n      position: 'absolute',\n      zIndex: 2,\n      width: props.size,\n      height: props.size,\n      padding: padding,\n      top: -10000,\n      left: -10000,\n      transform: 'translate(' + (10000 + props.left) + 'px, ' + (10000 + props.top) + 'px)',\n      opacity: props.status === 'hide' ? 0 : 1,\n      transition: props.status === 'hide' ? _transitions2.default.create('all', '.3s', 'ease-out') : 'none'\n    }\n  };\n}\n\nvar RefreshIndicator = function (_Component) {\n  (0, _inherits3.default)(RefreshIndicator, _Component);\n\n  function RefreshIndicator() {\n    (0, _classCallCheck3.default)(this, RefreshIndicator);\n    return (0, _possibleConstructorReturn3.default)(this, (RefreshIndicator.__proto__ || (0, _getPrototypeOf2.default)(RefreshIndicator)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(RefreshIndicator, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.scalePath(this.refs.path, 0);\n      this.rotateWrapper(this.refs.wrapper);\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      clearTimeout(this.scalePathTimer);\n      clearTimeout(this.rotateWrapperTimer);\n      clearTimeout(this.rotateWrapperSecondTimer);\n      this.scalePath(this.refs.path, 0);\n      this.rotateWrapper(this.refs.wrapper);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      clearTimeout(this.scalePathTimer);\n      clearTimeout(this.rotateWrapperTimer);\n      clearTimeout(this.rotateWrapperSecondTimer);\n    }\n  }, {\n    key: 'renderChildren',\n    value: function renderChildren() {\n      var prepareStyles = this.context.muiTheme.prepareStyles;\n      var paperSize = this.getPaperSize();\n      var childrenCmp = null;\n\n      if (this.props.status !== 'ready') {\n        var circleStyle = this.getCircleStyle(paperSize);\n        childrenCmp = _react2.default.createElement('div', {\n          ref: 'wrapper',\n          style: prepareStyles({\n            transition: _transitions2.default.create('transform', '20s', null, 'linear'),\n            width: '100%',\n            height: '100%'\n          })\n        }, _react2.default.createElement('svg', {\n          style: {\n            width: paperSize,\n            height: paperSize\n          },\n          viewBox: '0 0 ' + VIEWBOX_SIZE + ' ' + VIEWBOX_SIZE\n        }, _react2.default.createElement('circle', (0, _extends3.default)({\n          ref: 'path',\n          style: prepareStyles((0, _simpleAssign2.default)(circleStyle.style, {\n            transition: _transitions2.default.create('all', '1.5s', null, 'ease-in-out')\n          }))\n        }, circleStyle.attr))));\n      } else {\n        var _circleStyle = this.getCircleStyle(paperSize);\n\n        var polygonStyle = this.getPolygonStyle(paperSize);\n        childrenCmp = _react2.default.createElement('svg', {\n          style: {\n            width: paperSize,\n            height: paperSize\n          },\n          viewBox: '0 0 ' + VIEWBOX_SIZE + ' ' + VIEWBOX_SIZE\n        }, _react2.default.createElement('circle', (0, _extends3.default)({\n          style: prepareStyles(_circleStyle.style)\n        }, _circleStyle.attr)), _react2.default.createElement('polygon', (0, _extends3.default)({\n          style: prepareStyles(polygonStyle.style)\n        }, polygonStyle.attr)));\n      }\n\n      return childrenCmp;\n    }\n  }, {\n    key: 'getTheme',\n    value: function getTheme() {\n      return this.context.muiTheme.refreshIndicator;\n    }\n  }, {\n    key: 'getPaddingSize',\n    value: function getPaddingSize() {\n      var padding = this.props.size * 0.1;\n      return padding;\n    }\n  }, {\n    key: 'getPaperSize',\n    value: function getPaperSize() {\n      return this.props.size - this.getPaddingSize() * 2;\n    }\n  }, {\n    key: 'getCircleAttr',\n    value: function getCircleAttr() {\n      return {\n        radiu: VIEWBOX_SIZE / 2 - 5,\n        originX: VIEWBOX_SIZE / 2,\n        originY: VIEWBOX_SIZE / 2,\n        strokeWidth: 3\n      };\n    }\n  }, {\n    key: 'getArcDeg',\n    value: function getArcDeg() {\n      var p = this.props.percentage / 100;\n      var beginDeg = p * 120;\n      var endDeg = p * 410;\n      return [beginDeg, endDeg];\n    }\n  }, {\n    key: 'getFactor',\n    value: function getFactor() {\n      var p = this.props.percentage / 100;\n      var p1 = Math.min(1, p / 0.4);\n      return p1;\n    }\n  }, {\n    key: 'getCircleStyle',\n    value: function getCircleStyle() {\n      var isLoading = this.props.status === 'loading';\n      var p1 = isLoading ? 1 : this.getFactor();\n      var circle = this.getCircleAttr();\n      var perimeter = Math.PI * 2 * circle.radiu;\n\n      var _getArcDeg = this.getArcDeg(),\n          _getArcDeg2 = (0, _slicedToArray3.default)(_getArcDeg, 2),\n          beginDeg = _getArcDeg2[0],\n          endDeg = _getArcDeg2[1];\n\n      var arcLen = (endDeg - beginDeg) * perimeter / 360;\n      var dashOffset = -beginDeg * perimeter / 360;\n      var theme = this.getTheme();\n      return {\n        style: {\n          strokeDasharray: arcLen + ', ' + (perimeter - arcLen),\n          strokeDashoffset: dashOffset,\n          stroke: isLoading || this.props.percentage === 100 ? this.props.loadingColor || theme.loadingStrokeColor : this.props.color || theme.strokeColor,\n          strokeLinecap: 'round',\n          opacity: p1,\n          strokeWidth: circle.strokeWidth * p1,\n          fill: 'none'\n        },\n        attr: {\n          cx: circle.originX,\n          cy: circle.originY,\n          r: circle.radiu\n        }\n      };\n    }\n  }, {\n    key: 'getPolygonStyle',\n    value: function getPolygonStyle() {\n      var p1 = this.getFactor();\n      var circle = this.getCircleAttr();\n      var triangleCx = circle.originX + circle.radiu;\n      var triangleCy = circle.originY;\n      var dx = circle.strokeWidth * 7 / 4 * p1;\n      var trianglePath = triangleCx - dx + ',' + triangleCy + ' ' + (triangleCx + dx) + ',' + triangleCy + ' ' + triangleCx + ',' + (triangleCy + dx);\n\n      var _getArcDeg3 = this.getArcDeg(),\n          _getArcDeg4 = (0, _slicedToArray3.default)(_getArcDeg3, 2),\n          endDeg = _getArcDeg4[1];\n\n      var theme = this.getTheme();\n      return {\n        style: {\n          fill: this.props.percentage === 100 ? this.props.loadingColor || theme.loadingStrokeColor : this.props.color || theme.strokeColor,\n          transform: 'rotate(' + endDeg + 'deg)',\n          transformOrigin: circle.originX + 'px ' + circle.originY + 'px',\n          opacity: p1\n        },\n        attr: {\n          points: trianglePath\n        }\n      };\n    }\n  }, {\n    key: 'scalePath',\n    value: function scalePath(path, step) {\n      var _this2 = this;\n\n      if (this.props.status !== 'loading') return;\n      var currStep = (step || 0) % 3;\n      var circle = this.getCircleAttr();\n      var perimeter = Math.PI * 2 * circle.radiu;\n      var arcLen = perimeter * 0.64;\n      var strokeDasharray = void 0;\n      var strokeDashoffset = void 0;\n      var transitionDuration = void 0;\n\n      if (currStep === 0) {\n        strokeDasharray = '1, 200';\n        strokeDashoffset = 0;\n        transitionDuration = '0ms';\n      } else if (currStep === 1) {\n        strokeDasharray = arcLen + ', 200';\n        strokeDashoffset = -15;\n        transitionDuration = '750ms';\n      } else {\n        strokeDasharray = arcLen + ', 200';\n        strokeDashoffset = -(perimeter - 1);\n        transitionDuration = '850ms';\n      }\n\n      _autoPrefix2.default.set(path.style, 'strokeDasharray', strokeDasharray);\n\n      _autoPrefix2.default.set(path.style, 'strokeDashoffset', strokeDashoffset);\n\n      _autoPrefix2.default.set(path.style, 'transitionDuration', transitionDuration);\n\n      this.scalePathTimer = setTimeout(function () {\n        return _this2.scalePath(path, currStep + 1);\n      }, currStep ? 750 : 250);\n    }\n  }, {\n    key: 'rotateWrapper',\n    value: function rotateWrapper(wrapper) {\n      var _this3 = this;\n\n      if (this.props.status !== 'loading') return;\n\n      _autoPrefix2.default.set(wrapper.style, 'transform', null);\n\n      _autoPrefix2.default.set(wrapper.style, 'transform', 'rotate(0deg)');\n\n      _autoPrefix2.default.set(wrapper.style, 'transitionDuration', '0ms');\n\n      this.rotateWrapperSecondTimer = setTimeout(function () {\n        _autoPrefix2.default.set(wrapper.style, 'transform', 'rotate(1800deg)');\n\n        _autoPrefix2.default.set(wrapper.style, 'transitionDuration', '10s');\n\n        _autoPrefix2.default.set(wrapper.style, 'transitionTimingFunction', 'linear');\n      }, 50);\n      this.rotateWrapperTimer = setTimeout(function () {\n        return _this3.rotateWrapper(wrapper);\n      }, 10050);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          style = _props.style,\n          top = _props.top,\n          left = _props.left,\n          percentage = _props.percentage,\n          status = _props.status,\n          loadingColor = _props.loadingColor,\n          other = (0, _objectWithoutProperties3.default)(_props, ['style', 'top', 'left', 'percentage', 'status', 'loadingColor']);\n      var styles = getStyles(this.props, this.context);\n      return _react2.default.createElement(_Paper2.default, (0, _extends3.default)({\n        circle: true,\n        style: (0, _simpleAssign2.default)(styles.root, style)\n      }, other), this.renderChildren());\n    }\n  }]);\n  return RefreshIndicator;\n}(_react.Component);\n\nRefreshIndicator.defaultProps = {\n  percentage: 0,\n  size: 40,\n  status: 'hide'\n};\nRefreshIndicator.contextTypes = {\n  muiTheme: _propTypes2.default.object.isRequired\n};\nRefreshIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Override the theme's color of the indicator while it's status is\n   * \"ready\" and it's percentage is less than 100.\n   */\n  color: _propTypes2.default.string,\n\n  /**\n   * The absolute left position of the indicator in pixels.\n   */\n  left: _propTypes2.default.number.isRequired,\n\n  /**\n   * Override the theme's color of the indicator while\n   * it's status is \"loading\" or when it's percentage is 100.\n   */\n  loadingColor: _propTypes2.default.string,\n\n  /**\n   * The confirmation progress to fetch data. Max value is 100.\n   */\n  percentage: _propTypes2.default.number,\n\n  /**\n   * Size in pixels.\n   */\n  size: _propTypes2.default.number,\n\n  /**\n   * The display status of the indicator. If the status is\n   * \"ready\", the indicator will display the ready state\n   * arrow. If the status is \"loading\", it will display\n   * the loading progress indicator. If the status is \"hide\",\n   * the indicator will be hidden.\n   */\n  status: _propTypes2.default.oneOf(['ready', 'loading', 'hide']),\n\n  /**\n   * Override the inline-styles of the root element.\n   */\n  style: _propTypes2.default.object,\n\n  /**\n   * The absolute top position of the indicator in pixels.\n   */\n  top: _propTypes2.default.number.isRequired\n} : {};\nexports.default = RefreshIndicator;","map":null,"metadata":{},"sourceType":"script"}