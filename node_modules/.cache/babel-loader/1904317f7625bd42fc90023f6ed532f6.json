{"ast":null,"code":"'use strict';\n\nvar _get = require('babel-runtime/helpers/get')['default'];\n\nvar _inherits = require('babel-runtime/helpers/inherits')['default'];\n\nvar _createClass = require('babel-runtime/helpers/create-class')['default'];\n\nvar _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];\n\nvar _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Radio = require('./Radio');\n\nvar _Radio2 = _interopRequireDefault(_Radio);\n\nvar _InputContainer2 = require('./InputContainer');\n\nvar _InputContainer3 = _interopRequireDefault(_InputContainer2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar RadioGroup = function (_InputContainer) {\n  _inherits(RadioGroup, _InputContainer);\n\n  function RadioGroup(props) {\n    _classCallCheck(this, RadioGroup);\n\n    _get(Object.getPrototypeOf(RadioGroup.prototype), 'constructor', this).call(this, props);\n\n    this.state = {\n      value: props.defaultValue || props.value\n    };\n  }\n\n  _createClass(RadioGroup, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      _get(Object.getPrototypeOf(RadioGroup.prototype), 'componentWillMount', this).call(this);\n\n      this.props._registerInput(this);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      _get(Object.getPrototypeOf(RadioGroup.prototype), 'componentWillUnmount', this).call(this);\n\n      this.props._unregisterInput(this);\n    }\n  }, {\n    key: 'getValue',\n    value: function getValue() {\n      var input = this._inputs[this.props.name];\n      var value = undefined;\n      input.forEach(function (ipt) {\n        if (ipt.getChecked()) {\n          value = ipt.getValue();\n        }\n      });\n      return value;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var label = undefined;\n\n      if (this.props.label) {\n        label = _react2['default'].createElement('label', {\n          className: (0, _classnames2['default'])('control-label', this.props.labelClassName)\n        }, this.props.label);\n      }\n\n      var groupClassName = {\n        'form-group': !this.props.standalone,\n        'form-group-lg': !this.props.standalone && this.props.bsSize === 'large',\n        'form-group-sm': !this.props.standalone && this.props.bsSize === 'small',\n        'has-feedback': this.props.hasFeedback,\n        'has-success': this.props.bsStyle === 'success',\n        'has-warning': this.props.bsStyle === 'warning',\n        'has-error': this.props.bsStyle === 'error'\n      };\n      return _react2['default'].createElement('div', {\n        className: (0, _classnames2['default'])(groupClassName, this.props.groupClassName)\n      }, label, _react2['default'].createElement('div', {\n        className: this.props.wrapperClassName\n      }, this._renderChildren(), this._renderHelp()));\n    }\n  }, {\n    key: '_renderChildren',\n    value: function _renderChildren() {\n      var _this = this;\n\n      return _react2['default'].Children.map(this.props.children, function (child) {\n        if (child.type !== _Radio2['default']) {\n          throw new Error('Only Radio component is allowed inside RadioGroup');\n        }\n\n        return _react2['default'].cloneElement(child, {\n          type: 'radio',\n          standalone: true,\n          checked: _this.state.value === child.props.value,\n          name: _this.props.name,\n          onChange: _this._onChange.bind(_this),\n          _registerInput: _this.registerInput.bind(_this),\n          _unregisterInput: _this.unregisterInput.bind(_this)\n        });\n      });\n    }\n  }, {\n    key: '_renderHelp',\n    value: function _renderHelp() {\n      return this.props.help ? _react2['default'].createElement('span', {\n        className: \"help-block\",\n        key: \"help\"\n      }, this.props.help) : null;\n    }\n  }, {\n    key: '_onChange',\n    value: function _onChange(e) {\n      if (!e.target) {\n        return;\n      }\n\n      this.setState({\n        value: e.target.value\n      });\n      this.props.onChange(e);\n    }\n  }]);\n\n  return RadioGroup;\n}(_InputContainer3['default']);\n\nexports['default'] = RadioGroup;\nRadioGroup.propTypes = {\n  standalone: _react2['default'].PropTypes.bool,\n  hasFeedback: _react2['default'].PropTypes.bool,\n  bsSize: function bsSize(props) {\n    if (props.standalone && props.bsSize !== undefined) {\n      return new Error('bsSize will not be used when `standalone` is set.');\n    }\n\n    return _react2['default'].PropTypes.oneOf(['small', 'medium', 'large']).apply(null, arguments);\n  },\n  bsStyle: _react2['default'].PropTypes.oneOf(['success', 'warning', 'error']),\n  groupClassName: _react2['default'].PropTypes.string,\n  wrapperClassName: _react2['default'].PropTypes.string,\n  labelClassName: _react2['default'].PropTypes.string,\n  validationEvent: _react2['default'].PropTypes.oneOf(['onChange']),\n  validate: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.func, _react2['default'].PropTypes.string]),\n  errorHelp: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.string, _react2['default'].PropTypes.object])\n};\nRadioGroup.defaultProps = {\n  standalone: false,\n  validationEvent: 'onChange',\n  onChange: function onChange() {}\n};\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}