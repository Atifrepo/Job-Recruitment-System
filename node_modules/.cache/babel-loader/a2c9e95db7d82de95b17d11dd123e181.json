{"ast":null,"code":"import _classCallCheck from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/atif/hello-world/src/MyPostJobs.js\";\nimport React, { Component } from 'react';\nimport PropTypes, { func } from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport * as firebase from 'firebase';\nimport { create } from 'jss';\nvar rows = [createData('umer', 'React', 'Full time Job', '500$') // createData('name', 'JobTitle', 'Description', 'Salary'),\n// createData('name', 'JobTitle', 'Description', 'Salary')\n];\n\nvar MyPostJobs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyPostJobs, _Component);\n\n  function MyPostJobs() {\n    var _this;\n\n    _classCallCheck(this, MyPostJobs);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyPostJobs).call(this));\n    _this.state = {\n      id: 0\n    };\n    return _this;\n  }\n\n  _createClass(MyPostJobs, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"in did mount job post\");\n      var uid = firebase.auth().currentUser.uid;\n      var rootRef = firebase.database().ref();\n      var speedRef = rootRef.child('Job/');\n      speedRef.on('value', function (snap) {\n        var userobj = snap.val();\n        var key = Object.keys(userobj);\n\n        _this2.setState({\n          key: key\n        });\n\n        for (var i = 0; i < key.length; i++) {\n          var k = key[i];\n\n          if (uid == userobj[k].CompanyId) {\n            _this2.state.jobtitle[i] = userobj[k].jobtitle;\n            _this2.state.description[i] = userobj[k].description;\n            _this2.state.salary[i] = userobj[k].salary;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"createData\",\n    value: function createData(name, jobtitle, description, salary) {\n      this.state.id += 1;\n      this.setState({\n        id: id\n      });\n      return name, jobtitle, description, salary;\n    }\n  }, {\n    key: \"SimpleTable\",\n    value: function SimpleTable(props) {\n      var classes = props.classes;\n      return React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Job Title\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Description\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Salary\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, rows.map(function (row) {\n        return React.createElement(TableRow, {\n          key: row.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, row.name), React.createElement(TableCell, {\n          numeric: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, row.name), React.createElement(TableCell, {\n          numeric: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, row.JobTitle), React.createElement(TableCell, {\n          numeric: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, row.Description), React.createElement(TableCell, {\n          numeric: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, row.Salary));\n      }))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"IN RENDER\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.SimpleTable());\n    }\n  }]);\n\n  return MyPostJobs;\n}(Component);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      overflowX: 'auto'\n    },\n    table: {\n      minWidth: 700\n    }\n  };\n}; // function SimpleTable(props) {\n//     const { classes } = props;\n//     return (\n//         <Paper>\n//             <Table  >\n//                 <TableHead>\n//                     <TableRow>\n//                     <TableCell>Company Name</TableCell>\n//                         <TableCell>Job Title</TableCell>\n//                         <TableCell>Description</TableCell>\n//                         <TableCell>Salary</TableCell>\n//                     </TableRow>\n//                 </TableHead>\n//                 <TableBody>\n//                     {rows.map(row => {\n//                         return (\n//                             <TableRow key={row.id}>\n//                                 <TableCell component=\"th\" scope=\"row\">\n//                                     {row.name}\n//                                 </TableCell>\n//                                 <TableCell numeric>{row.name}</TableCell>\n//                                 <TableCell numeric>{row.JobTitle}</TableCell>\n//                                 <TableCell numeric>{row.Description}</TableCell>\n//                                 <TableCell numeric>{row.Salary}</TableCell>\n//                             </TableRow>\n//                         );\n//                     })}\n//                 </TableBody>\n//             </Table>\n//         </Paper>\n//     );\n// }\n\n\nSimpleTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(MyPostJobs); // class MyPostJobs extends Component {\n//     constructor() {\n//         super();\n//     }\n// render() {\n//     return(\n//         <div>\n//             <table id='myTable' >\n//              <tr>\n//                  <th>JobTitle</th>\n//                  <th>____________</th>\n//                  <th>Salary</th>\n//                  <th>____________</th>\n//                  <th>Description</th>\n//              </tr>\n//             </table>\n//         </div>\n//     )\n// }\n// //} \n//export default MyPostJobs;","map":{"version":3,"sources":["/home/atif/hello-world/src/MyPostJobs.js"],"names":["React","Component","PropTypes","func","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","firebase","create","rows","createData","MyPostJobs","state","id","console","log","uid","auth","currentUser","rootRef","database","ref","speedRef","child","on","snap","userobj","val","key","Object","keys","setState","i","length","k","CompanyId","jobtitle","description","salary","name","props","classes","map","row","JobTitle","Description","Salary","SimpleTable","styles","theme","root","width","marginTop","spacing","unit","overflowX","table","minWidth","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes, { func } from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport *as firebase from 'firebase'\nimport { create } from 'jss';\nconst rows = [\n    createData('umer', 'React','Full time Job' ,'500$')  \n    // createData('name', 'JobTitle', 'Description', 'Salary'),\n    // createData('name', 'JobTitle', 'Description', 'Salary')\n];\n\nclass MyPostJobs  extends Component {\n    constructor(){\n        super()\n        this.state={\n            id:0,\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"in did mount job post\")\n        var uid = firebase.auth().currentUser.uid;\n        const rootRef = firebase.database().ref();\n        const speedRef = rootRef.child('Job/');\n        speedRef.on('value', snap => {\n            var userobj = snap.val();\n            var key = Object.keys(userobj);\n            this.setState({ key })\n            for (var i = 0; i < key.length; i++) {\n                var k = key[i];\n                if (uid == userobj[k].CompanyId) {\n                    this.state.jobtitle[i] = userobj[k].jobtitle;\n                    this.state.description[i] = userobj[k].description;\n                    this.state.salary[i] = userobj[k].salary;\n                }\n            }\n        }\n        )\n    }\n    \n createData(name, jobtitle, description, salary) {\n     this.state.id+=1;\n    this.setState({id})\n    return (name, jobtitle, description, salary);\n}\n\n\n\n     SimpleTable(props) {\n        const { classes } = props;\n        return (\n            <Paper>\n                <Table  >\n                    <TableHead>\n                        <TableRow>\n                        <TableCell>Company Name</TableCell>\n                            <TableCell>Job Title</TableCell>\n                            <TableCell>Description</TableCell>\n                            <TableCell>Salary</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map(row => {\n                            return (\n                                <TableRow key={row.id}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {row.name}\n                                    </TableCell>\n                                    <TableCell numeric>{row.name}</TableCell>\n                                    <TableCell numeric>{row.JobTitle}</TableCell>\n                                    <TableCell numeric>{row.Description}</TableCell>\n                                    <TableCell numeric>{row.Salary}</TableCell>\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </Paper>\n        );\n    }\n\n    render(){\n        console.log(\"IN RENDER\")\n        return(\n                <div>{this.SimpleTable()}</div>\n              \n        )}\n\n}\n\n\nconst styles = theme => ({\n\n\n\n\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n\n    },\n\n    table: {\n        minWidth: 700,\n    },\n});\n\n\n\n\n// function SimpleTable(props) {\n//     const { classes } = props;\n//     return (\n//         <Paper>\n//             <Table  >\n//                 <TableHead>\n//                     <TableRow>\n//                     <TableCell>Company Name</TableCell>\n//                         <TableCell>Job Title</TableCell>\n//                         <TableCell>Description</TableCell>\n//                         <TableCell>Salary</TableCell>\n//                     </TableRow>\n//                 </TableHead>\n//                 <TableBody>\n//                     {rows.map(row => {\n//                         return (\n//                             <TableRow key={row.id}>\n//                                 <TableCell component=\"th\" scope=\"row\">\n//                                     {row.name}\n//                                 </TableCell>\n//                                 <TableCell numeric>{row.name}</TableCell>\n//                                 <TableCell numeric>{row.JobTitle}</TableCell>\n//                                 <TableCell numeric>{row.Description}</TableCell>\n//                                 <TableCell numeric>{row.Salary}</TableCell>\n//                             </TableRow>\n//                         );\n//                     })}\n//                 </TableBody>\n//             </Table>\n//         </Paper>\n//     );\n// }\n\nSimpleTable.propTypes = {\n    classes: PropTypes.object.isRequired\n};\nexport default (withStyles)(MyPostJobs)\n\n\n// class MyPostJobs extends Component {\n//     constructor() {\n//         super();\n//     }\n// render() {\n//     return(\n//         <div>\n//             <table id='myTable' >\n//              <tr>\n//                  <th>JobTitle</th>\n//                  <th>____________</th>\n//                  <th>Salary</th>\n//                  <th>____________</th>\n//                  <th>Description</th>\n//              </tr>\n\n//             </table>\n//         </div>\n//     )\n// }\n\n// //} \n\n//export default MyPostJobs;\n\n\n\n"]},"metadata":{},"sourceType":"module"}