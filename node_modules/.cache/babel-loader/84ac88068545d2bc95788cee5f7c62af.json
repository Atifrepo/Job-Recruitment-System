{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport elementType from 'react-prop-types/lib/elementType';\nimport { prefix, splitBsProps, bsClass } from './utils/bootstrapUtils';\nimport PanelToggle from './PanelToggle';\nvar propTypes = {\n  componentClass: elementType,\n\n  /**\n   * A convenience prop that renders the Panel.Title as a panel collapse toggle component\n   * for the common use-case.\n   */\n  toggle: PropTypes.bool\n};\nvar contextTypes = {\n  $bs_panel: PropTypes.shape({\n    bsClass: PropTypes.string\n  })\n};\nvar defaultProps = {\n  componentClass: 'div'\n};\n\nvar PanelTitle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(PanelTitle, _React$Component);\n\n  function PanelTitle() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PanelTitle.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        className = _this$props.className,\n        toggle = _this$props.toggle,\n        Component = _this$props.componentClass,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"className\", \"toggle\", \"componentClass\"]);\n\n    var _ref = this.context.$bs_panel || {},\n        _bsClass = _ref.bsClass;\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    bsProps.bsClass = _bsClass || bsProps.bsClass;\n\n    if (toggle) {\n      children = React.createElement(PanelToggle, null, children);\n    }\n\n    return React.createElement(Component, _extends({}, elementProps, {\n      className: cn(className, prefix(bsProps, 'title'))\n    }), children);\n  };\n\n  return PanelTitle;\n}(React.Component);\n\nPanelTitle.propTypes = propTypes;\nPanelTitle.defaultProps = defaultProps;\nPanelTitle.contextTypes = contextTypes;\nexport default bsClass('panel', PanelTitle);","map":null,"metadata":{},"sourceType":"module"}