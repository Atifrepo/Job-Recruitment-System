{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose\";\n/* eslint-disable react/no-multi-comp */\n\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport SafeAnchor from './SafeAnchor';\nvar propTypes = {\n  eventKey: PropTypes.any,\n  className: PropTypes.string,\n  onSelect: PropTypes.func,\n  disabled: PropTypes.bool,\n  active: PropTypes.bool,\n  activeLabel: PropTypes.string.isRequired\n};\nvar defaultProps = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\nexport default function PaginationItem(_ref) {\n  var active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      style = _ref.style,\n      activeLabel = _ref.activeLabel,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"active\", \"disabled\", \"className\", \"style\", \"activeLabel\", \"children\"]);\n\n  var Component = active || disabled ? 'span' : SafeAnchor;\n  return React.createElement(\"li\", {\n    style: style,\n    className: classNames(className, {\n      active: active,\n      disabled: disabled\n    })\n  }, React.createElement(Component, _extends({\n    disabled: disabled\n  }, props), children, active && React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, activeLabel)));\n}\nPaginationItem.propTypes = propTypes;\nPaginationItem.defaultProps = defaultProps;\n\nfunction createButton(name, defaultValue, label) {\n  var _class, _temp;\n\n  if (label === void 0) {\n    label = name;\n  }\n\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(_class, _React$Component);\n\n    function _class() {\n      return _React$Component.apply(this, arguments) || this;\n    }\n\n    var _proto = _class.prototype;\n\n    _proto.render = function render() {\n      var _this$props = this.props,\n          disabled = _this$props.disabled,\n          children = _this$props.children,\n          className = _this$props.className,\n          props = _objectWithoutPropertiesLoose(_this$props, [\"disabled\", \"children\", \"className\"]);\n\n      var Component = disabled ? 'span' : SafeAnchor;\n      return React.createElement(\"li\", _extends({\n        \"aria-label\": label,\n        className: classNames(className, {\n          disabled: disabled\n        })\n      }, props), React.createElement(Component, null, children || defaultValue));\n    };\n\n    return _class;\n  }(React.Component), _class.displayName = name, _class.propTypes = {\n    disabled: PropTypes.bool\n  }, _temp;\n}\n\nexport var First = createButton('First', \"\\xAB\");\nexport var Prev = createButton('Prev', \"\\u2039\");\nexport var Ellipsis = createButton('Ellipsis', \"\\u2026\", 'More');\nexport var Next = createButton('Next', \"\\u203A\");\nexport var Last = createButton('Last', \"\\xBB\");","map":null,"metadata":{},"sourceType":"module"}