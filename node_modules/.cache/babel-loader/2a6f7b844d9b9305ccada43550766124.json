{"ast":null,"code":"import _classCallCheck from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/atif/hello-world/src/MyPostJobs.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport * as firebase from 'firebase';\n\nvar MyPostJobs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyPostJobs, _Component);\n\n  function MyPostJobs() {\n    var _this;\n\n    _classCallCheck(this, MyPostJobs);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyPostJobs).call(this));\n    _this.state = {\n      id: 0,\n      JobInfo: [{\n        CompanyId: '',\n        jobtitle: '',\n        description: '',\n        salary: '',\n        key: ''\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(MyPostJobs, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"in job post\");\n      var uid = firebase.auth().currentUser.uid;\n      console.log(\"in job post\" + uid);\n      var rootRef = firebase.database().ref();\n      var speedRef = rootRef.child('Job/').orderByChild('CompanyId').equalTo(uid).once('value', function (snap) {\n        var userobj = snap.val();\n        console.log(\"userobj\", userobj);\n        var key = Object.keys(userobj);\n\n        _this2.setState({\n          key: key\n        });\n\n        for (var i = 0; i < key.length; i++) {\n          var k = key[i];\n\n          if (uid == userobj[k].CompanyId) {\n            _this2.state.JobInfo[i] = {}; //  this.state.JobInfo=userobj[k].JobInfo;\n\n            _this2.state.JobInfo[i].jobtitle = userobj[k].jobtitle;\n            _this2.state.JobInfo[i].description = userobj[k].description;\n            _this2.state.JobInfo[i].salary = userobj[k].salary;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('jobinfo', this.state.JobInfo); // console.log('description', this.state.description)\n      // console.log('salary', this.state.salary)\n\n      return React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"CompanyId\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Job Title\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Description\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Salary\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.state.JobInfo.map(function (row) {\n        return React.createElement(TableRow, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, row.CompanyId), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, row.jobtitle), \"console.log)\\\\\", React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, row.description), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, row.salary));\n      }))));\n    }\n  }]);\n\n  return MyPostJobs;\n}(Component);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      overflowX: 'auto'\n    },\n    table: {\n      minWidth: 700\n    }\n  };\n};\n\nexport default withStyles(styles)(MyPostJobs);","map":{"version":3,"sources":["/home/atif/hello-world/src/MyPostJobs.js"],"names":["React","Component","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","firebase","MyPostJobs","state","id","JobInfo","CompanyId","jobtitle","description","salary","key","console","log","uid","auth","currentUser","rootRef","database","ref","speedRef","child","orderByChild","equalTo","once","snap","userobj","val","Object","keys","setState","i","length","k","map","row","styles","theme","root","width","marginTop","spacing","unit","overflowX","table","minWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport *as firebase from 'firebase';\n\n\nclass MyPostJobs extends Component {\n    constructor() {\n        super();\n        this.state = {\n            id: 0,\n            JobInfo: [{\nCompanyId:'',\n                jobtitle: '', description: '', salary: '', key: ''\n            }]\n\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"in job post\")\n\n        var uid = firebase.auth().currentUser.uid;\n        console.log(\"in job post\" + uid)\n        const rootRef = firebase.database().ref();\n        const speedRef = rootRef.child('Job/').orderByChild('CompanyId').equalTo(uid).once('value', snap => {\n            var userobj = snap.val();   \n            console.log(\"userobj\",userobj)\n            var key = Object.keys(userobj);\n            this.setState({ key })\n            for (var i = 0; i < key.length; i++) {\n                var k = key[i];\n\n                if (uid == userobj[k].CompanyId) {\n                    this.state.JobInfo[i]={}\n                    //  this.state.JobInfo=userobj[k].JobInfo;\n                    this.state.JobInfo[i].jobtitle = userobj[k].jobtitle;\n                    this.state.JobInfo[i].description = userobj[k].description;\n                    this.state.JobInfo[i].salary = userobj[k].salary;\n                }\n            }\n        }\n\n        )\n    }\n\n    render() {\n        console.log('jobinfo', this.state.JobInfo)\n        // console.log('description', this.state.description)\n        // console.log('salary', this.state.salary)\n        return (\n\n            <Paper>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                             <TableCell>CompanyId</TableCell> \n                            <TableCell >Job Title</TableCell>\n                            <TableCell >Description</TableCell>\n                            <TableCell >Salary</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.state.JobInfo.map(row => {\n                            return (\n                                <TableRow>\n\n                                      <TableCell>{row.CompanyId}</TableCell>\n                                    <TableCell >{row.jobtitle}</TableCell>\n                                    console.log)\\\n                                    <TableCell >{row.description}</TableCell>\n                                    <TableCell >{row.salary}</TableCell>\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </Paper>\n        )\n    }\n\n}\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n});\n\n\nexport default withStyles(styles)(MyPostJobs);"]},"metadata":{},"sourceType":"module"}