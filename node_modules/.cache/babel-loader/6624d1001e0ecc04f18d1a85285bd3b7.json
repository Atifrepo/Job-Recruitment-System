{"ast":null,"code":"import _classCallCheck from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/atif/hello-world/src/MyPostJobs.js\";\nimport React, { Component } from 'react';\nimport PropTypes, { func } from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport * as firebase from 'firebase';\nimport { create } from 'jss';\n\nvar MyPostJobs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyPostJobs, _Component);\n\n  function MyPostJobs() {\n    _classCallCheck(this, MyPostJobs);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyPostJobs).apply(this, arguments));\n  }\n\n  _createClass(MyPostJobs, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      console.log(\"in did mount job post\");\n      var uid = firebase.auth().currentUser.uid;\n      var rootRef = firebase.database().ref();\n      var speedRef = rootRef.child('Job/');\n      speedRef.on('value', function (snap) {\n        var userobj = snap.val();\n        var key = Object.keys(userobj);\n\n        _this.setState({\n          key: key\n        });\n\n        for (var i = 0; i < key.length; i++) {\n          var k = key[i];\n\n          if (uid == userobj[k].CompanyId) {\n            _this.state.jobtitle[i] = userobj[k].jobtitle;\n            _this.state.description[i] = userobj[k].description;\n            _this.state.salary[i] = userobj[k].salary;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"IN RENDER\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, SimpleTable());\n    }\n  }]);\n\n  return MyPostJobs;\n}(Component);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      overflowX: 'auto'\n    },\n    table: {\n      minWidth: 700\n    }\n  };\n};\n\nvar id = 0;\n\nfunction createData(name, jobtitle, description, salary) {\n  id += 1;\n  return name, jobtitle, description, salary;\n}\n\nvar rows = [createData('umer', 'React', 'Full time Job', '500$') // createData('name', 'JobTitle', 'Description', 'Salary'),\n// createData('name', 'JobTitle', 'Description', 'Salary')\n]; // function SimpleTable(props) {\n//     const { classes } = props;\n//     return (\n//         <Paper>\n//             <Table  >\n//                 <TableHead>\n//                     <TableRow>\n//                     <TableCell>Company Name</TableCell>\n//                         <TableCell>Job Title</TableCell>\n//                         <TableCell>Description</TableCell>\n//                         <TableCell>Salary</TableCell>\n//                     </TableRow>\n//                 </TableHead>\n//                 <TableBody>\n//                     {rows.map(row => {\n//                         return (\n//                             <TableRow key={row.id}>\n//                                 <TableCell component=\"th\" scope=\"row\">\n//                                     {row.name}\n//                                 </TableCell>\n//                                 <TableCell numeric>{row.name}</TableCell>\n//                                 <TableCell numeric>{row.JobTitle}</TableCell>\n//                                 <TableCell numeric>{row.Description}</TableCell>\n//                                 <TableCell numeric>{row.Salary}</TableCell>\n//                             </TableRow>\n//                         );\n//                     })}\n//                 </TableBody>\n//             </Table>\n//         </Paper>\n//     );\n// }\n\nSimpleTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(SimpleTable, MyPostJobs); // class MyPostJobs extends Component {\n//     constructor() {\n//         super();\n//     }\n// render() {\n//     return(\n//         <div>\n//             <table id='myTable' >\n//              <tr>\n//                  <th>JobTitle</th>\n//                  <th>____________</th>\n//                  <th>Salary</th>\n//                  <th>____________</th>\n//                  <th>Description</th>\n//              </tr>\n//             </table>\n//         </div>\n//     )\n// }\n// //} \n//export default MyPostJobs;","map":{"version":3,"sources":["/home/atif/hello-world/src/MyPostJobs.js"],"names":["React","Component","PropTypes","func","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","firebase","create","MyPostJobs","console","log","uid","auth","currentUser","rootRef","database","ref","speedRef","child","on","snap","userobj","val","key","Object","keys","setState","i","length","k","CompanyId","state","jobtitle","description","salary","SimpleTable","styles","theme","root","width","marginTop","spacing","unit","overflowX","table","minWidth","id","createData","name","rows","propTypes","classes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes, { func } from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport *as firebase from 'firebase'\nimport { create } from 'jss';\n\n\nclass MyPostJobs  extends Component {\n\n    componentDidMount() {\n        console.log(\"in did mount job post\")\n        var uid = firebase.auth().currentUser.uid;\n        const rootRef = firebase.database().ref();\n        const speedRef = rootRef.child('Job/');\n        speedRef.on('value', snap => {\n            var userobj = snap.val();\n            var key = Object.keys(userobj);\n            this.setState({ key })\n            for (var i = 0; i < key.length; i++) {\n                var k = key[i];\n                if (uid == userobj[k].CompanyId) {\n                    this.state.jobtitle[i] = userobj[k].jobtitle;\n                    this.state.description[i] = userobj[k].description;\n                    this.state.salary[i] = userobj[k].salary;\n                }\n            }\n        }\n        )\n    }\n\n    render(){\n        console.log(\"IN RENDER\")\n        return(\n                <div>{SimpleTable()}</div>\n              \n        )}\n\n}\n\n\nconst styles = theme => ({\n\n\n\n\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n\n    },\n\n    table: {\n        minWidth: 700,\n    },\n});\n\n\n\nlet id = 0;\nfunction createData(name, jobtitle, description, salary) {\n    id += 1\n    return (name, jobtitle, description, salary);\n}\n\nconst rows = [\n    createData('umer', 'React','Full time Job' ,'500$')  \n    // createData('name', 'JobTitle', 'Description', 'Salary'),\n    // createData('name', 'JobTitle', 'Description', 'Salary')\n];\n// function SimpleTable(props) {\n//     const { classes } = props;\n//     return (\n//         <Paper>\n//             <Table  >\n//                 <TableHead>\n//                     <TableRow>\n//                     <TableCell>Company Name</TableCell>\n//                         <TableCell>Job Title</TableCell>\n//                         <TableCell>Description</TableCell>\n//                         <TableCell>Salary</TableCell>\n//                     </TableRow>\n//                 </TableHead>\n//                 <TableBody>\n//                     {rows.map(row => {\n//                         return (\n//                             <TableRow key={row.id}>\n//                                 <TableCell component=\"th\" scope=\"row\">\n//                                     {row.name}\n//                                 </TableCell>\n//                                 <TableCell numeric>{row.name}</TableCell>\n//                                 <TableCell numeric>{row.JobTitle}</TableCell>\n//                                 <TableCell numeric>{row.Description}</TableCell>\n//                                 <TableCell numeric>{row.Salary}</TableCell>\n//                             </TableRow>\n//                         );\n//                     })}\n//                 </TableBody>\n//             </Table>\n//         </Paper>\n//     );\n// }\n\nSimpleTable.propTypes = {\n    classes: PropTypes.object.isRequired\n};\nexport default (withStyles)(SimpleTable, MyPostJobs)\n\n\n// class MyPostJobs extends Component {\n//     constructor() {\n//         super();\n//     }\n// render() {\n//     return(\n//         <div>\n//             <table id='myTable' >\n//              <tr>\n//                  <th>JobTitle</th>\n//                  <th>____________</th>\n//                  <th>Salary</th>\n//                  <th>____________</th>\n//                  <th>Description</th>\n//              </tr>\n\n//             </table>\n//         </div>\n//     )\n// }\n\n// //} \n\n//export default MyPostJobs;\n\n\n\n"]},"metadata":{},"sourceType":"module"}