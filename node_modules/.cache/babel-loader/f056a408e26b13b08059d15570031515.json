{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _ButtonBase = _interopRequireDefault(require(\"../ButtonBase\"));\n\nvar _unsupportedProp = _interopRequireDefault(require(\"../utils/unsupportedProp\")); // @inheritedComponent ButtonBase\n\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      transition: theme.transitions.create(['color', 'padding-top'], {\n        duration: theme.transitions.duration.short\n      }),\n      paddingTop: 8,\n      paddingBottom: 10,\n      paddingLeft: 12,\n      paddingRight: 12,\n      minWidth: 80,\n      maxWidth: 168,\n      color: theme.palette.text.secondary,\n      flex: '1',\n      '&$iconOnly': {\n        paddingTop: 16\n      },\n      '&$selected': {\n        paddingTop: 6,\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the root element if selected. */\n    selected: {},\n\n    /* Styles applied to the root element if `showLabel={false}` and not selected. */\n    iconOnly: {},\n\n    /* Styles applied to the span element that wraps the icon and label. */\n    wrapper: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the label's span element. */\n    label: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(12),\n      opacity: 1,\n      transition: 'font-size 0.2s, opacity 0.2s',\n      transitionDelay: '0.1s',\n      '&$iconOnly': {\n        opacity: 0,\n        transitionDelay: '0s'\n      },\n      '&$selected': {\n        fontSize: theme.typography.pxToRem(14)\n      }\n    }\n  };\n};\n\nexports.styles = styles;\n\nvar BottomNavigationAction =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(BottomNavigationAction, _React$Component);\n\n  function BottomNavigationAction() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, BottomNavigationAction);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(BottomNavigationAction)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleChange = function (event) {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          value = _this$props.value,\n          onClick = _this$props.onClick;\n\n      if (onChange) {\n        onChange(event, value);\n      }\n\n      if (onClick) {\n        onClick(event);\n      }\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(BottomNavigationAction, [{\n    key: \"render\",\n    value: function render() {\n      var _classNames, _classNames2;\n\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          classNameProp = _this$props2.className,\n          icon = _this$props2.icon,\n          label = _this$props2.label,\n          onChange = _this$props2.onChange,\n          onClick = _this$props2.onClick,\n          selected = _this$props2.selected,\n          showLabelProp = _this$props2.showLabel,\n          value = _this$props2.value,\n          other = (0, _objectWithoutProperties2.default)(_this$props2, [\"classes\", \"className\", \"icon\", \"label\", \"onChange\", \"onClick\", \"selected\", \"showLabel\", \"value\"]);\n      var className = (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.selected, selected), (0, _defineProperty2.default)(_classNames, classes.iconOnly, !showLabelProp && !selected), _classNames), classNameProp);\n      var labelClassName = (0, _classnames.default)(classes.label, (_classNames2 = {}, (0, _defineProperty2.default)(_classNames2, classes.selected, selected), (0, _defineProperty2.default)(_classNames2, classes.iconOnly, !showLabelProp && !selected), _classNames2));\n      return _react.default.createElement(_ButtonBase.default, (0, _extends2.default)({\n        className: className,\n        focusRipple: true,\n        onClick: this.handleChange\n      }, other), _react.default.createElement(\"span\", {\n        className: classes.wrapper\n      }, icon, _react.default.createElement(\"span\", {\n        className: labelClassName\n      }, label)));\n    }\n  }]);\n  return BottomNavigationAction;\n}(_react.default.Component);\n\nBottomNavigationAction.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * This property isn't supported.\n   * Use the `component` property if you need to change the children structure.\n   */\n  children: _unsupportedProp.default,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The icon element.\n   */\n  icon: _propTypes.default.node,\n\n  /**\n   * The label element.\n   */\n  label: _propTypes.default.node,\n\n  /**\n   * @ignore\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onClick: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  selected: _propTypes.default.bool,\n\n  /**\n   * If `true`, the `BottomNavigationAction` will show its label.\n   * By default, only the selected `BottomNavigationAction`\n   * inside `BottomNavigation` will show its label.\n   */\n  showLabel: _propTypes.default.bool,\n\n  /**\n   * You can provide your own value. Otherwise, we fallback to the child position index.\n   */\n  value: _propTypes.default.any\n} : {};\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiBottomNavigationAction'\n})(BottomNavigationAction);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}