{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Media from './Media';\nimport { bsClass, getClassSet, prefix, splitBsProps } from './utils/bootstrapUtils';\nvar propTypes = {\n  /**\n   * Align the media to the top, middle, or bottom of the media object.\n   */\n  align: PropTypes.oneOf(['top', 'middle', 'bottom'])\n};\n\nvar MediaRight =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(MediaRight, _React$Component);\n\n  function MediaRight() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = MediaRight.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        align = _this$props.align,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"align\", \"className\"]);\n\n    var _splitBsProps = splitBsProps(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = getClassSet(bsProps);\n\n    if (align) {\n      // The class is e.g. `media-top`, not `media-right-top`.\n      classes[prefix(Media.defaultProps, align)] = true;\n    }\n\n    return React.createElement(\"div\", _extends({}, elementProps, {\n      className: classNames(className, classes)\n    }));\n  };\n\n  return MediaRight;\n}(React.Component);\n\nMediaRight.propTypes = propTypes;\nexport default bsClass('media-right', MediaRight);","map":null,"metadata":{},"sourceType":"module"}