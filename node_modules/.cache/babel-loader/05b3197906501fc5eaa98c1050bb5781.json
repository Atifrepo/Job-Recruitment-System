{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _simpleAssign = require('simple-assign');\n\nvar _simpleAssign2 = _interopRequireDefault(_simpleAssign);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _checkCircle = require('../svg-icons/action/check-circle');\n\nvar _checkCircle2 = _interopRequireDefault(_checkCircle);\n\nvar _SvgIcon = require('../SvgIcon');\n\nvar _SvgIcon2 = _interopRequireDefault(_SvgIcon);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar getStyles = function getStyles(_ref, _ref2) {\n  var active = _ref.active,\n      completed = _ref.completed,\n      disabled = _ref.disabled;\n  var muiTheme = _ref2.muiTheme,\n      stepper = _ref2.stepper;\n  var _muiTheme$stepper = muiTheme.stepper,\n      textColor = _muiTheme$stepper.textColor,\n      disabledTextColor = _muiTheme$stepper.disabledTextColor,\n      iconColor = _muiTheme$stepper.iconColor,\n      inactiveIconColor = _muiTheme$stepper.inactiveIconColor;\n  var baseTheme = muiTheme.baseTheme;\n  var orientation = stepper.orientation;\n  var styles = {\n    root: {\n      height: orientation === 'horizontal' ? 72 : 64,\n      color: textColor,\n      display: 'flex',\n      alignItems: 'center',\n      fontFamily: baseTheme.fontFamily,\n      fontSize: 14,\n      paddingLeft: 14,\n      paddingRight: 14\n    },\n    icon: {\n      color: iconColor,\n      display: 'block',\n      fontSize: 24,\n      width: 24,\n      height: 24\n    },\n    iconContainer: {\n      paddingRight: 8\n    }\n  };\n\n  if (active) {\n    styles.root.fontWeight = 500;\n  }\n\n  if (!completed && !active) {\n    styles.icon.color = inactiveIconColor;\n  }\n\n  if (disabled) {\n    styles.icon.color = inactiveIconColor;\n    styles.root.color = disabledTextColor;\n    styles.root.cursor = 'default';\n  }\n\n  return styles;\n};\n\nvar renderIcon = function renderIcon(completed, icon, styles) {\n  var iconType = typeof icon === 'undefined' ? 'undefined' : (0, _typeof3.default)(icon);\n\n  if (iconType === 'number' || iconType === 'string') {\n    if (completed) {\n      return _react2.default.createElement(_checkCircle2.default, {\n        color: styles.icon.color,\n        style: styles.icon\n      });\n    }\n\n    return _react2.default.createElement(_SvgIcon2.default, {\n      color: styles.icon.color,\n      style: styles.icon\n    }, _react2.default.createElement('circle', {\n      cx: '12',\n      cy: '12',\n      r: '10'\n    }), _react2.default.createElement('text', {\n      x: '12',\n      y: '16',\n      textAnchor: 'middle',\n      fontSize: '12',\n      fill: '#fff'\n    }, icon));\n  }\n\n  return icon;\n};\n\nvar StepLabel = function StepLabel(props, context) {\n  var active = props.active,\n      children = props.children,\n      completed = props.completed,\n      userIcon = props.icon,\n      iconContainerStyle = props.iconContainerStyle,\n      last = props.last,\n      style = props.style,\n      other = (0, _objectWithoutProperties3.default)(props, ['active', 'children', 'completed', 'icon', 'iconContainerStyle', 'last', 'style']);\n  var prepareStyles = context.muiTheme.prepareStyles;\n  var styles = getStyles(props, context);\n  var icon = renderIcon(completed, userIcon, styles);\n  return _react2.default.createElement('span', (0, _extends3.default)({\n    style: prepareStyles((0, _simpleAssign2.default)(styles.root, style))\n  }, other), icon && _react2.default.createElement('span', {\n    style: prepareStyles((0, _simpleAssign2.default)(styles.iconContainer, iconContainerStyle))\n  }, icon), children);\n};\n\nStepLabel.muiName = 'StepLabel';\nStepLabel.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Sets active styling. Overrides disabled coloring.\n   */\n  active: _propTypes2.default.bool,\n\n  /**\n   * The label text node\n   */\n  children: _propTypes2.default.node,\n\n  /**\n   * Sets completed styling. Overrides disabled coloring.\n   */\n  completed: _propTypes2.default.bool,\n\n  /**\n   * Sets disabled styling.\n   */\n  disabled: _propTypes2.default.bool,\n\n  /**\n   * The icon displayed by the step label.\n   */\n  icon: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string, _propTypes2.default.number]),\n\n  /**\n   * Override the inline-styles of the icon container element.\n   */\n  iconContainerStyle: _propTypes2.default.object,\n\n  /**\n   * @ignore\n   */\n  last: _propTypes2.default.bool,\n\n  /**\n   * Override the inline-style of the root element.\n   */\n  style: _propTypes2.default.object\n} : {};\nStepLabel.contextTypes = {\n  muiTheme: _propTypes2.default.object.isRequired,\n  stepper: _propTypes2.default.object\n};\nexports.default = StepLabel;","map":null,"metadata":{},"sourceType":"script"}