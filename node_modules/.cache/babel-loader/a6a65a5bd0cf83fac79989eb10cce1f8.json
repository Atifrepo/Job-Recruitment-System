{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _simpleAssign = require('simple-assign');\n\nvar _simpleAssign2 = _interopRequireDefault(_simpleAssign);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _keycode = require('keycode');\n\nvar _keycode2 = _interopRequireDefault(_keycode);\n\nvar _colorManipulator = require('../utils/colorManipulator');\n\nvar _EnhancedButton = require('../internal/EnhancedButton');\n\nvar _EnhancedButton2 = _interopRequireDefault(_EnhancedButton);\n\nvar _cancel = require('../svg-icons/navigation/cancel');\n\nvar _cancel2 = _interopRequireDefault(_cancel);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getStyles(props, context, state) {\n  var chip = context.muiTheme.chip;\n  var backgroundColor = props.backgroundColor || chip.backgroundColor;\n  var focusColor = (0, _colorManipulator.emphasize)(backgroundColor, 0.08);\n  var pressedColor = (0, _colorManipulator.emphasize)(backgroundColor, 0.12);\n  return {\n    avatar: {\n      marginRight: -4\n    },\n    deleteIcon: {\n      color: state.deleteHovered ? (0, _colorManipulator.fade)(chip.deleteIconColor, 0.4) : chip.deleteIconColor,\n      cursor: 'pointer',\n      margin: '4px 4px 0px -8px'\n    },\n    label: {\n      color: props.labelColor || chip.textColor,\n      fontSize: chip.fontSize,\n      fontWeight: chip.fontWeight,\n      lineHeight: '32px',\n      paddingLeft: 12,\n      paddingRight: 12,\n      userSelect: 'none',\n      whiteSpace: 'nowrap'\n    },\n    root: {\n      backgroundColor: state.clicked ? pressedColor : state.focused || state.hovered ? focusColor : backgroundColor,\n      borderRadius: 16,\n      boxShadow: state.clicked ? chip.shadow : null,\n      cursor: props.onClick ? 'pointer' : 'default',\n      display: 'flex',\n      whiteSpace: 'nowrap',\n      width: 'fit-content'\n    }\n  };\n}\n\nvar Chip = function (_Component) {\n  (0, _inherits3.default)(Chip, _Component);\n\n  function Chip() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Chip);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Chip.__proto__ || (0, _getPrototypeOf2.default)(Chip)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      clicked: false,\n      deleteHovered: false,\n      focused: false,\n      hovered: false\n    }, _this.handleBlur = function (event) {\n      _this.setState({\n        clicked: false,\n        focused: false\n      });\n\n      _this.props.onBlur(event);\n    }, _this.handleFocus = function (event) {\n      if (_this.props.onClick || _this.props.onRequestDelete) {\n        _this.setState({\n          focused: true\n        });\n      }\n\n      _this.props.onFocus(event);\n    }, _this.handleKeyboardFocus = function (event, keyboardFocused) {\n      if (keyboardFocused) {\n        _this.handleFocus();\n\n        _this.props.onFocus(event);\n      } else {\n        _this.handleBlur();\n      }\n\n      _this.props.onKeyboardFocus(event, keyboardFocused);\n    }, _this.handleKeyDown = function (event) {\n      if ((0, _keycode2.default)(event) === 'backspace') {\n        event.preventDefault();\n\n        if (_this.props.onRequestDelete) {\n          _this.props.onRequestDelete(event);\n        }\n      }\n\n      _this.props.onKeyDown(event);\n    }, _this.handleMouseDown = function (event) {\n      // Only listen to left clicks\n      if (event.button === 0) {\n        event.stopPropagation();\n\n        if (_this.props.onClick) {\n          _this.setState({\n            clicked: true\n          });\n        }\n      }\n\n      _this.props.onMouseDown(event);\n    }, _this.handleMouseEnter = function (event) {\n      if (_this.props.onClick) {\n        _this.setState({\n          hovered: true\n        });\n      }\n\n      _this.props.onMouseEnter(event);\n    }, _this.handleMouseEnterDeleteIcon = function () {\n      _this.setState({\n        deleteHovered: true\n      });\n    }, _this.handleMouseLeave = function (event) {\n      _this.setState({\n        clicked: false,\n        hovered: false\n      });\n\n      _this.props.onMouseLeave(event);\n    }, _this.handleMouseLeaveDeleteIcon = function () {\n      _this.setState({\n        deleteHovered: false\n      });\n    }, _this.handleMouseUp = function (event) {\n      _this.setState({\n        clicked: false\n      });\n\n      _this.props.onMouseUp(event);\n    }, _this.handleClickDeleteIcon = function (event) {\n      // Stop the event from bubbling up to the `Chip`\n      event.stopPropagation();\n\n      _this.props.onRequestDelete(event);\n    }, _this.handleTouchEnd = function (event) {\n      _this.setState({\n        clicked: false\n      });\n\n      _this.props.onTouchEnd(event);\n    }, _this.handleTouchStart = function (event) {\n      event.stopPropagation();\n\n      if (_this.props.onClick) {\n        _this.setState({\n          clicked: true\n        });\n      }\n\n      _this.props.onTouchStart(event);\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Chip, [{\n    key: 'render',\n    value: function render() {\n      var buttonEventHandlers = {\n        onBlur: this.handleBlur,\n        onFocus: this.handleFocus,\n        onKeyDown: this.handleKeyDown,\n        onMouseDown: this.handleMouseDown,\n        onMouseEnter: this.handleMouseEnter,\n        onMouseLeave: this.handleMouseLeave,\n        onMouseUp: this.handleMouseUp,\n        onTouchEnd: this.handleTouchEnd,\n        onTouchStart: this.handleTouchStart,\n        onKeyboardFocus: this.handleKeyboardFocus\n      };\n      var prepareStyles = this.context.muiTheme.prepareStyles;\n      var styles = getStyles(this.props, this.context, this.state);\n      var _props = this.props,\n          childrenProp = _props.children,\n          containerElement = _props.containerElement,\n          style = _props.style,\n          className = _props.className,\n          deleteIconStyle = _props.deleteIconStyle,\n          labelStyle = _props.labelStyle,\n          labelColor = _props.labelColor,\n          backgroundColor = _props.backgroundColor,\n          onRequestDelete = _props.onRequestDelete,\n          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'containerElement', 'style', 'className', 'deleteIconStyle', 'labelStyle', 'labelColor', 'backgroundColor', 'onRequestDelete']);\n      var deletable = this.props.onRequestDelete;\n      var avatar = null;\n      var deleteIcon = deletable ? _react2.default.createElement(_cancel2.default, {\n        color: styles.deleteIcon.color,\n        style: (0, _simpleAssign2.default)(styles.deleteIcon, deleteIconStyle),\n        onClick: this.handleClickDeleteIcon,\n        onMouseEnter: this.handleMouseEnterDeleteIcon,\n        onMouseLeave: this.handleMouseLeaveDeleteIcon\n      }) : null;\n      var children = childrenProp;\n\n      var childCount = _react2.default.Children.count(children); // If the first child is an avatar, extract it and style it\n\n\n      if (childCount > 1) {\n        children = _react2.default.Children.toArray(children);\n\n        if (_react2.default.isValidElement(children[0]) && children[0].type.muiName === 'Avatar') {\n          avatar = children.shift();\n          avatar = _react2.default.cloneElement(avatar, {\n            style: (0, _simpleAssign2.default)(styles.avatar, avatar.props.style),\n            size: 32\n          });\n        }\n      }\n\n      return _react2.default.createElement(_EnhancedButton2.default, (0, _extends3.default)({}, other, buttonEventHandlers, {\n        className: className,\n        containerElement: containerElement,\n        disableTouchRipple: true,\n        disableFocusRipple: true,\n        style: (0, _simpleAssign2.default)(styles.root, style)\n      }), avatar, _react2.default.createElement('span', {\n        style: prepareStyles((0, _simpleAssign2.default)(styles.label, labelStyle))\n      }, children), deleteIcon);\n    }\n  }]);\n  return Chip;\n}(_react.Component);\n\nChip.defaultProps = {\n  containerElement: 'div',\n  // Firefox doesn't support nested buttons\n  onBlur: function onBlur() {},\n  onFocus: function onFocus() {},\n  onKeyDown: function onKeyDown() {},\n  onKeyboardFocus: function onKeyboardFocus() {},\n  onMouseDown: function onMouseDown() {},\n  onMouseEnter: function onMouseEnter() {},\n  onMouseLeave: function onMouseLeave() {},\n  onMouseUp: function onMouseUp() {},\n  onTouchEnd: function onTouchEnd() {},\n  onTouchStart: function onTouchStart() {}\n};\nChip.contextTypes = {\n  muiTheme: _propTypes2.default.object.isRequired\n};\nChip.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Override the background color of the chip.\n   */\n  backgroundColor: _propTypes2.default.string,\n\n  /**\n   * Used to render elements inside the Chip.\n   */\n  children: _propTypes2.default.node,\n\n  /**\n   * CSS `className` of the root element.\n   */\n  className: _propTypes2.default.node,\n\n  /**\n   * The element to use as the container for the Chip. Either a string to\n   * use a DOM element or a ReactElement.\n   */\n  containerElement: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.element]),\n\n  /**\n   * Override the inline-styles of the delete icon.\n   */\n  deleteIconStyle: _propTypes2.default.object,\n\n  /**\n   * Override the label color.\n   */\n  labelColor: _propTypes2.default.string,\n\n  /**\n   * Override the inline-styles of the label.\n   */\n  labelStyle: _propTypes2.default.object,\n\n  /** @ignore */\n  onBlur: _propTypes2.default.func,\n\n  /**\n   * Callback function fired when the `Chip` element is clicked.\n   *\n   * @param {object} event Click event targeting the element.\n   */\n  onClick: _propTypes2.default.func,\n\n  /** @ignore */\n  onFocus: _propTypes2.default.func,\n\n  /** @ignore */\n  onKeyDown: _propTypes2.default.func,\n\n  /** @ignore */\n  onKeyboardFocus: _propTypes2.default.func,\n\n  /** @ignore */\n  onMouseDown: _propTypes2.default.func,\n\n  /** @ignore */\n  onMouseEnter: _propTypes2.default.func,\n\n  /** @ignore */\n  onMouseLeave: _propTypes2.default.func,\n\n  /** @ignore */\n  onMouseUp: _propTypes2.default.func,\n\n  /**\n   * Callback function fired when the delete icon is clicked. If set, the delete icon will be shown.\n   * @param {object} event `click` event targeting the element.\n   */\n  onRequestDelete: _propTypes2.default.func,\n\n  /** @ignore */\n  onTouchEnd: _propTypes2.default.func,\n\n  /** @ignore */\n  onTouchStart: _propTypes2.default.func,\n\n  /**\n   * Override the inline-styles of the root element.\n   */\n  style: _propTypes2.default.object\n} : {};\nexports.default = Chip;","map":null,"metadata":{},"sourceType":"script"}