{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _simpleAssign = require('simple-assign');\n\nvar _simpleAssign2 = _interopRequireDefault(_simpleAssign);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _StepConnector = require('./StepConnector');\n\nvar _StepConnector2 = _interopRequireDefault(_StepConnector);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar getStyles = function getStyles(props) {\n  var orientation = props.orientation;\n  return {\n    root: {\n      display: 'flex',\n      flexDirection: orientation === 'horizontal' ? 'row' : 'column',\n      alignContent: 'center',\n      alignItems: orientation === 'horizontal' ? 'center' : 'stretch',\n      justifyContent: 'space-between'\n    }\n  };\n};\n\nvar Stepper = function (_Component) {\n  (0, _inherits3.default)(Stepper, _Component);\n\n  function Stepper() {\n    (0, _classCallCheck3.default)(this, Stepper);\n    return (0, _possibleConstructorReturn3.default)(this, (Stepper.__proto__ || (0, _getPrototypeOf2.default)(Stepper)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(Stepper, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      var orientation = this.props.orientation;\n      return {\n        stepper: {\n          orientation: orientation\n        }\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          activeStep = _props.activeStep,\n          children = _props.children,\n          connector = _props.connector,\n          linear = _props.linear,\n          style = _props.style;\n      var prepareStyles = this.context.muiTheme.prepareStyles;\n      var styles = getStyles(this.props, this.context);\n      /**\n       * One day, we may be able to use real CSS tools\n       * For now, we need to create our own \"pseudo\" elements\n       * and nth child selectors, etc\n       * That's what some of this garbage is for :)\n       */\n\n      var numChildren = _react.Children.count(children);\n\n      var steps = _react.Children.map(children, function (step, index) {\n        if (!_react2.default.isValidElement(step)) {\n          return null;\n        }\n\n        var controlProps = {\n          index: index\n        };\n\n        if (activeStep === index) {\n          controlProps.active = true;\n        } else if (linear && activeStep > index) {\n          controlProps.completed = true;\n        } else if (linear && activeStep < index) {\n          controlProps.disabled = true;\n        }\n\n        if (index + 1 === numChildren) {\n          controlProps.last = true;\n        }\n\n        return [index > 0 && connector, _react2.default.cloneElement(step, (0, _simpleAssign2.default)(controlProps, step.props))];\n      });\n\n      return _react2.default.createElement('div', {\n        style: prepareStyles((0, _simpleAssign2.default)(styles.root, style))\n      }, steps);\n    }\n  }]);\n  return Stepper;\n}(_react.Component);\n\nStepper.defaultProps = {\n  connector: _react2.default.createElement(_StepConnector2.default, null),\n  orientation: 'horizontal',\n  linear: true\n};\nStepper.contextTypes = {\n  muiTheme: _propTypes2.default.object.isRequired\n};\nStepper.childContextTypes = {\n  stepper: _propTypes2.default.object\n};\nStepper.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Set the active step (zero based index). This will enable `Step` control helpers.\n   */\n  activeStep: _propTypes2.default.number,\n\n  /**\n   * Should be two or more `<Step />` components.\n   */\n  children: _propTypes2.default.node,\n\n  /**\n   * A component to be placed between each step.\n   */\n  connector: _propTypes2.default.node,\n\n  /**\n   * If set to `true`, the `Stepper` will assist in controlling steps for linear flow\n   */\n  linear: _propTypes2.default.bool,\n\n  /**\n   * The stepper orientation (layout flow direction)\n   */\n  orientation: _propTypes2.default.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * Override the inline-style of the root element.\n   */\n  style: _propTypes2.default.object\n} : {};\nexports.default = Stepper;","map":null,"metadata":{},"sourceType":"script"}