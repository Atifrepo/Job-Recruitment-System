{"ast":null,"code":"import _classCallCheck from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/atif/hello-world/src/ViewCompany.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'; //import Button from 'react-bootstrap-validation';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper'; //  '\n\nimport * as firebase from 'firebase';\nimport { join } from 'path';\n\nvar ViewCompany =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewCompany, _Component);\n\n  function ViewCompany() {\n    var _this;\n\n    _classCallCheck(this, ViewCompany);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewCompany).call(this));\n    _this.state = {\n      id: 0,\n      e_mail: [{\n        email: '',\n        name: ''\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(ViewCompany, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // var uid = firebase.auth().currentUser.uid;\n      var rootRef = firebase.database().ref();\n      var speedeRef = rootRef.child('USER');\n      speedeRef.on('value', function (snap) {\n        var count = 0;\n        var userobj = snap.val();\n        var key = Object.keys(userobj);\n\n        for (var i = 0; i < key.length; i++) {\n          var k = key[i];\n          console.log(userobj[k].type);\n\n          if (userobj[k].type == 'company') {\n            if (userobj[k]) {\n              console.log(\"s\", userobj[k].e_mail);\n              _this2.state.e_mail[i] = {};\n              _this2.state.e_mail[i].email = userobj[k].e_mail;\n              _this2.state.e_mail[i].Name = userobj[k].Name;\n            } else {\n              console.log(\"s\", userobj[i].e_mail);\n            } //this.state.name[i]=userobj[k],name;\n            //console.log(\"s\",userobj[k])\n\n          }\n        }\n\n        _this2.setState({\n          e_mail: _this2.state.e_mail\n        });\n      });\n    } // const rows = [\n    //   createData('e_mail' ),\n    // //   createData('Ice cream sandwich'),\n    // //   createData('Eclair'),\n    // //   createData('Cupcake'),\n    // //   createData('Gingerbread'),\n    // ];\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      // const { classes } = props;\n      console.log(\"email\", this.state.e_mail);\n      console.log(\"Name\", this.state.fname);\n      console.log(\"GPA\", this.state.GPA);\n      return React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Email\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.state.e_mail.map(function (row) {\n        return React.createElement(TableRow, {\n          key: row.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, row.fname), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, row.email));\n      }))));\n    }\n  }]);\n\n  return ViewCompany;\n}(Component);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      overflowX: 'auto'\n    },\n    table: {\n      minWidth: 700\n    }\n  };\n};\n\nexport default withStyles(styles)(ViewCompany);","map":{"version":3,"sources":["/home/atif/hello-world/src/ViewCompany.js"],"names":["React","Component","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","RaisedButton","TableRow","Paper","firebase","join","ViewCompany","state","id","e_mail","email","name","rootRef","database","ref","speedeRef","child","on","snap","count","userobj","val","key","Object","keys","i","length","k","console","log","type","Name","setState","fname","GPA","map","row","styles","theme","root","width","marginTop","spacing","unit","overflowX","table","minWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n//import Button from 'react-bootstrap-validation';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n//  '\n\nimport *as firebase from 'firebase';\nimport { join } from 'path';\nclass ViewCompany extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: 0,\n      e_mail: [{ email: '', name: '' }]\n    }\n  }\n  componentDidMount() {\n\n    // var uid = firebase.auth().currentUser.uid;\n    const rootRef = firebase.database().ref();\n    var speedeRef = rootRef.child('USER');\n    speedeRef.on('value', snap => {\n\n      var count = 0;\n      var userobj = snap.val();\n      var key = Object.keys(userobj);\n      for (var i = 0; i < key.length; i++) {\n        var k = key[i];\n\n        console.log(userobj[k].type);\n        if (userobj[k].type == 'company') {                \n          if (userobj[k]) {\n            console.log(\"s\", userobj[k].e_mail)\n            this.state.e_mail[i] = {};\n\n            this.state.e_mail[i].email = userobj[k].e_mail;\n            this.state.e_mail[i].Name = userobj[k].Name;\n          \n          } else { console.log(\"s\", userobj[i].e_mail) }\n\n          //this.state.name[i]=userobj[k],name;\n          //console.log(\"s\",userobj[k])\n\n        }\n      }\n      this.setState({ e_mail: this.state.e_mail })\n\n\n    })\n  }\n\n\n\n\n\n  // const rows = [\n  //   createData('e_mail' ),\n  // //   createData('Ice cream sandwich'),\n  // //   createData('Eclair'),\n  // //   createData('Cupcake'),\n  // //   createData('Gingerbread'),\n  // ];\n\n  \n\n\n  render() {\n\n\n\n\n    // const { classes } = props;\n    console.log(\"email\", this.state.e_mail)\n    console.log(\"Name\",this.state.fname)\n    console.log(\"GPA\",this.state.GPA)\n    return (\n\n      <Paper >\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Company Name</TableCell>\n              <TableCell >Email</TableCell>\n              {/* <TableCell >Degree Title</TableCell>\n              <TableCell >University Name</TableCell>\n              <TableCell >From Date</TableCell>\n              <TableCell >To Date</TableCell>\n              <TableCell >GPA</TableCell>\n              <TableCell >Division</TableCell>\n              <TableCell >Enrollment Number</TableCell>\n              <TableCell ></TableCell> */}\n              \n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.e_mail.map(row => {\n              return (\n                <TableRow key={row.id}>\n\n\n                  <TableCell >{row.fname}</TableCell>\n                  <TableCell >{row.email}</TableCell>\n                  {/* <TableCell >{row.DegreeTitle} </TableCell>\n                  <TableCell >{row.UniversityName}</TableCell>\n                  <TableCell >{row.FromDate}</TableCell>\n                  <TableCell >{row.ToDate} </TableCell>\n                  <TableCell >{row.GPA}</TableCell>\n                  <TableCell >{row.Division}</TableCell>\n                  <TableCell >{row.EnrollmentNumber} </TableCell> */}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </Paper>\n    )\n  }\n}\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n});\n\n\nexport default withStyles(styles)(ViewCompany)\n"]},"metadata":{},"sourceType":"module"}