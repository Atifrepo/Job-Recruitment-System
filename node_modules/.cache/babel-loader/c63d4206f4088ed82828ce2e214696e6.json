{"ast":null,"code":"import _classCallCheck from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/atif/hello-world/src/MyPostJobs.js\";\nimport React, { Component } from 'react';\nimport PropTypes, { func } from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport * as firebase from 'firebase';\nimport { create } from 'jss'; // class MyPostJobs  extends Component {\n//     componentDidMount() {\n//         console.log(\"in did mount job post\")\n//         var uid = firebase.auth().currentUser.uid;\n//         const rootRef = firebase.database().ref();\n//         const speedRef = rootRef.child('Job/');\n//         speedRef.on('value', snap => {\n//             var userobj = snap.val();\n//             var key = Object.keys(userobj);\n//             this.setState({ key })\n//             for (var i = 0; i < key.length; i++) {\n//                 var k = key[i];\n//                 if (uid == userobj[k].CompanyId) {\n//                     this.state.jobtitle[i] = userobj[k].jobtitle;\n//                     this.state.description[i] = userobj[k].description;\n//                     this.state.salary[i] = userobj[k].salary;\n//                 }\n//             }\n//         }\n//         )\n//     }\n//      SimpleTable(props) {\n//         const { classes } = props;\n//         return (\n//             <Paper>\n//                 <Table  >\n//                     <TableHead>\n//                         <TableRow>\n//                         <TableCell>Company Name</TableCell>\n//                             <TableCell>Job Title</TableCell>\n//                             <TableCell>Description</TableCell>\n//                             <TableCell>Salary</TableCell>\n//                         </TableRow>\n//                     </TableHead>\n//                     <TableBody>\n//                         {rows.map(row => {\n//                             return (\n//                                 <TableRow key={row.id}>\n//                                     <TableCell component=\"th\" scope=\"row\">\n//                                         {row.name}\n//                                     </TableCell>\n//                                     <TableCell numeric>{row.name}</TableCell>\n//                                     <TableCell numeric>{row.JobTitle}</TableCell>\n//                                     <TableCell numeric>{row.Description}</TableCell>\n//                                     <TableCell numeric>{row.Salary}</TableCell>\n//                                 </TableRow>\n//                             );\n//                         })}\n//                     </TableBody>\n//                 </Table>\n//             </Paper>\n//         );\n//     }\n//     render(){\n//         console.log(\"IN RENDER\")\n//         return(\n//                 <div>{this.SimpleTable()}</div>\n//         )}\n// }\n// const styles = theme => ({\n//     root: {\n//         width: '100%',\n//         marginTop: theme.spacing.unit * 3,\n//         overflowX: 'auto',\n//     },\n//     table: {\n//         minWidth: 700,\n//     },\n// });\n// let id = 0;\n// function createData(name, jobtitle, description, salary) {\n//     id += 1\n//     return (name, jobtitle, description, salary);\n// }\n// const rows = [\n//     createData('umer', 'React','Full time Job' ,'500$')  \n//     // createData('name', 'JobTitle', 'Description', 'Salary'),\n//     // createData('name', 'JobTitle', 'Description', 'Salary')\n// ];\n// // function SimpleTable(props) {\n// //     const { classes } = props;\n// //     return (\n// //         <Paper>\n// //             <Table  >\n// //                 <TableHead>\n// //                     <TableRow>\n// //                     <TableCell>Company Name</TableCell>\n// //                         <TableCell>Job Title</TableCell>\n// //                         <TableCell>Description</TableCell>\n// //                         <TableCell>Salary</TableCell>\n// //                     </TableRow>\n// //                 </TableHead>\n// //                 <TableBody>\n// //                     {rows.map(row => {\n// //                         return (\n// //                             <TableRow key={row.id}>\n// //                                 <TableCell component=\"th\" scope=\"row\">\n// //                                     {row.name}\n// //                                 </TableCell>\n// //                                 <TableCell numeric>{row.name}</TableCell>\n// //                                 <TableCell numeric>{row.JobTitle}</TableCell>\n// //                                 <TableCell numeric>{row.Description}</TableCell>\n// //                                 <TableCell numeric>{row.Salary}</TableCell>\n// //                             </TableRow>\n// //                         );\n// //                     })}\n// //                 </TableBody>\n// //             </Table>\n// //         </Paper>\n// //     );\n// // }\n// SimpleTable.propTypes = {\n//     classes: PropTypes.object.isRequired\n// };\n// export default (withStyles)(MyPostJobs)\n\nvar MyPostJobs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyPostJobs, _Component);\n\n  function MyPostJobs() {\n    _classCallCheck(this, MyPostJobs);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyPostJobs).call(this));\n  }\n\n  _createClass(MyPostJobs, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        id: \"myTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"JobTitle\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"____________\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Salary\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"____________\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Description\"))));\n    }\n  }]);\n\n  return MyPostJobs;\n}(Component);\n\nexport default MyPostJobs;","map":{"version":3,"sources":["/home/atif/hello-world/src/MyPostJobs.js"],"names":["React","Component","PropTypes","func","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","firebase","create","MyPostJobs"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,IAAoBC,IAApB,QAAgC,YAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAO,KAAIC,QAAX,MAAyB,UAAzB;AACA,SAASC,MAAT,QAAuB,KAAvB,C,CAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAKA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;IAGMC,U;;;;;AACF,wBAAc;AAAA;;AAAA;AAEb;;;;6BACI;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,EAAE,EAAC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALJ,CADD,CADJ,CADJ;AAcH;;;;EAnBwBZ,S;;AAuBzB,eAAeY,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes, { func } from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport *as firebase from 'firebase'\nimport { create } from 'jss';\n\n\n// class MyPostJobs  extends Component {\n\n//     componentDidMount() {\n//         console.log(\"in did mount job post\")\n//         var uid = firebase.auth().currentUser.uid;\n//         const rootRef = firebase.database().ref();\n//         const speedRef = rootRef.child('Job/');\n//         speedRef.on('value', snap => {\n//             var userobj = snap.val();\n//             var key = Object.keys(userobj);\n//             this.setState({ key })\n//             for (var i = 0; i < key.length; i++) {\n//                 var k = key[i];\n//                 if (uid == userobj[k].CompanyId) {\n//                     this.state.jobtitle[i] = userobj[k].jobtitle;\n//                     this.state.description[i] = userobj[k].description;\n//                     this.state.salary[i] = userobj[k].salary;\n//                 }\n//             }\n//         }\n//         )\n//     }\n\n//      SimpleTable(props) {\n//         const { classes } = props;\n//         return (\n//             <Paper>\n//                 <Table  >\n//                     <TableHead>\n//                         <TableRow>\n//                         <TableCell>Company Name</TableCell>\n//                             <TableCell>Job Title</TableCell>\n//                             <TableCell>Description</TableCell>\n//                             <TableCell>Salary</TableCell>\n//                         </TableRow>\n//                     </TableHead>\n//                     <TableBody>\n//                         {rows.map(row => {\n//                             return (\n//                                 <TableRow key={row.id}>\n//                                     <TableCell component=\"th\" scope=\"row\">\n//                                         {row.name}\n//                                     </TableCell>\n//                                     <TableCell numeric>{row.name}</TableCell>\n//                                     <TableCell numeric>{row.JobTitle}</TableCell>\n//                                     <TableCell numeric>{row.Description}</TableCell>\n//                                     <TableCell numeric>{row.Salary}</TableCell>\n//                                 </TableRow>\n//                             );\n//                         })}\n//                     </TableBody>\n//                 </Table>\n//             </Paper>\n//         );\n//     }\n\n//     render(){\n//         console.log(\"IN RENDER\")\n//         return(\n//                 <div>{this.SimpleTable()}</div>\n              \n//         )}\n\n// }\n\n\n// const styles = theme => ({\n\n\n\n\n//     root: {\n//         width: '100%',\n//         marginTop: theme.spacing.unit * 3,\n//         overflowX: 'auto',\n\n//     },\n\n//     table: {\n//         minWidth: 700,\n//     },\n// });\n\n\n\n// let id = 0;\n// function createData(name, jobtitle, description, salary) {\n//     id += 1\n//     return (name, jobtitle, description, salary);\n// }\n\n// const rows = [\n//     createData('umer', 'React','Full time Job' ,'500$')  \n//     // createData('name', 'JobTitle', 'Description', 'Salary'),\n//     // createData('name', 'JobTitle', 'Description', 'Salary')\n// ];\n// // function SimpleTable(props) {\n// //     const { classes } = props;\n// //     return (\n// //         <Paper>\n// //             <Table  >\n// //                 <TableHead>\n// //                     <TableRow>\n// //                     <TableCell>Company Name</TableCell>\n// //                         <TableCell>Job Title</TableCell>\n// //                         <TableCell>Description</TableCell>\n// //                         <TableCell>Salary</TableCell>\n// //                     </TableRow>\n// //                 </TableHead>\n// //                 <TableBody>\n// //                     {rows.map(row => {\n// //                         return (\n// //                             <TableRow key={row.id}>\n// //                                 <TableCell component=\"th\" scope=\"row\">\n// //                                     {row.name}\n// //                                 </TableCell>\n// //                                 <TableCell numeric>{row.name}</TableCell>\n// //                                 <TableCell numeric>{row.JobTitle}</TableCell>\n// //                                 <TableCell numeric>{row.Description}</TableCell>\n// //                                 <TableCell numeric>{row.Salary}</TableCell>\n// //                             </TableRow>\n// //                         );\n// //                     })}\n// //                 </TableBody>\n// //             </Table>\n// //         </Paper>\n// //     );\n// // }\n\n// SimpleTable.propTypes = {\n//     classes: PropTypes.object.isRequired\n// };\n// export default (withStyles)(MyPostJobs)\n\n\nclass MyPostJobs extends Component {\n    constructor() {\n        super();\n    }\nrender() {\n    return(\n        <div>\n            <table id='myTable' >\n             <tr>\n                 <th>JobTitle</th>\n                 <th>____________</th>\n                 <th>Salary</th>\n                 <th>____________</th>\n                 <th>Description</th>\n             </tr>\n\n            </table>\n        </div>\n    )\n}\n\n} \n\nexport default MyPostJobs;\n\n\n\n"]},"metadata":{},"sourceType":"module"}