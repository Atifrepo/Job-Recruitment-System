{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _simpleAssign = require('simple-assign');\n\nvar _simpleAssign2 = _interopRequireDefault(_simpleAssign);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getStyles(props, context) {\n  var card = context.muiTheme.card;\n  return {\n    root: {\n      padding: 16,\n      position: 'relative'\n    },\n    title: {\n      fontSize: 24,\n      color: props.titleColor || card.titleColor,\n      display: 'block',\n      lineHeight: '36px'\n    },\n    subtitle: {\n      fontSize: 14,\n      color: props.subtitleColor || card.subtitleColor,\n      display: 'block'\n    }\n  };\n}\n\nvar CardTitle = function (_Component) {\n  (0, _inherits3.default)(CardTitle, _Component);\n\n  function CardTitle() {\n    (0, _classCallCheck3.default)(this, CardTitle);\n    return (0, _possibleConstructorReturn3.default)(this, (CardTitle.__proto__ || (0, _getPrototypeOf2.default)(CardTitle)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(CardTitle, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          actAsExpander = _props.actAsExpander,\n          children = _props.children,\n          closeIcon = _props.closeIcon,\n          expandable = _props.expandable,\n          showExpandableButton = _props.showExpandableButton,\n          style = _props.style,\n          subtitle = _props.subtitle,\n          subtitleColor = _props.subtitleColor,\n          subtitleStyle = _props.subtitleStyle,\n          title = _props.title,\n          titleColor = _props.titleColor,\n          titleStyle = _props.titleStyle,\n          other = (0, _objectWithoutProperties3.default)(_props, ['actAsExpander', 'children', 'closeIcon', 'expandable', 'showExpandableButton', 'style', 'subtitle', 'subtitleColor', 'subtitleStyle', 'title', 'titleColor', 'titleStyle']);\n      var prepareStyles = this.context.muiTheme.prepareStyles;\n      var styles = getStyles(this.props, this.context);\n      var rootStyle = (0, _simpleAssign2.default)({}, styles.root, style);\n      var extendedTitleStyle = (0, _simpleAssign2.default)({}, styles.title, titleStyle);\n      var extendedSubtitleStyle = (0, _simpleAssign2.default)({}, styles.subtitle, subtitleStyle);\n      return _react2.default.createElement('div', (0, _extends3.default)({}, other, {\n        style: prepareStyles(rootStyle)\n      }), _react2.default.createElement('span', {\n        style: prepareStyles(extendedTitleStyle)\n      }, title), _react2.default.createElement('span', {\n        style: prepareStyles(extendedSubtitleStyle)\n      }, subtitle), children);\n    }\n  }]);\n  return CardTitle;\n}(_react.Component);\n\nCardTitle.muiName = 'CardTitle';\nCardTitle.contextTypes = {\n  muiTheme: _propTypes2.default.object.isRequired\n};\nCardTitle.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * If true, a click on this card component expands the card.\n   */\n  actAsExpander: _propTypes2.default.bool,\n\n  /**\n   * Can be used to render elements inside the Card Title.\n   */\n  children: _propTypes2.default.node,\n\n  /**\n   * Can be used to pass a closeIcon if you don't like the default expandable close Icon.\n   */\n  closeIcon: _propTypes2.default.node,\n\n  /**\n   * If true, this card component is expandable.\n   */\n  expandable: _propTypes2.default.bool,\n\n  /**\n   * If true, this card component will include a button to expand the card.\n   */\n  showExpandableButton: _propTypes2.default.bool,\n\n  /**\n   * Override the inline-styles of the root element.\n   */\n  style: _propTypes2.default.object,\n\n  /**\n   * Can be used to render a subtitle in the Card Title.\n   */\n  subtitle: _propTypes2.default.node,\n\n  /**\n   * Override the subtitle color.\n   */\n  subtitleColor: _propTypes2.default.string,\n\n  /**\n   * Override the inline-styles of the subtitle.\n   */\n  subtitleStyle: _propTypes2.default.object,\n\n  /**\n   * Can be used to render a title in the Card Title.\n   */\n  title: _propTypes2.default.node,\n\n  /**\n   * Override the title color.\n   */\n  titleColor: _propTypes2.default.string,\n\n  /**\n   * Override the inline-styles of the title.\n   */\n  titleStyle: _propTypes2.default.object\n} : {};\nexports.default = CardTitle;","map":null,"metadata":{},"sourceType":"script"}