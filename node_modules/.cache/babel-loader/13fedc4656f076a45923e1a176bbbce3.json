{"ast":null,"code":"import _classCallCheck from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/atif/hello-world/src/MyPostJobs.js\";\nimport React, { Component } from 'react';\nimport PropTypes, { func } from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport * as firebase from 'firebase';\nimport { create } from 'jss';\n\nvar MyPostJobs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyPostJobs, _Component);\n\n  function MyPostJobs() {\n    _classCallCheck(this, MyPostJobs);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyPostJobs).apply(this, arguments));\n  }\n\n  _createClass(MyPostJobs, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      var uid = firebase.auth().currentUser.uid;\n      var rootRef = firebase.database().ref();\n      var speedRef = rootRef.child('Job/');\n      speedRef.on('value', function (snap) {\n        var userobj = snap.val();\n        var key = Object.keys(userobj);\n\n        _this.setState({\n          key: key\n        });\n\n        var table = document.createElement('table');\n\n        for (var i = 0; i < key.length; i++) {\n          var k = key[i];\n\n          if (uid == userobj[k].CompanyId) {\n            _this.state.JobTitle[i] = userobj[k].JobTitle;\n            _this.state.Description[i] = userobj[k].Description;\n            _this.s;\n          }\n        }\n      });\n    }\n  }]);\n\n  return MyPostJobs;\n}(Component);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      overflowX: 'auto'\n    },\n    table: {\n      minWidth: 700\n    }\n  };\n};\n\nvar id = 0;\n\nfunction createData(User, JobTitle, Description, Salary) {\n  id += 1;\n  return id, JobTitle, Description, Salary;\n}\n\nvar rows = [createData('JeddahSoft', this.state.JobTitle, this.state.Description, this.state.Salary), createData('Avanza', this.state.JobTitle, this.state.Description, this.state.Salary), createData('xyz', this.state.JobTitle, this.state.Description, this.state.Salary)];\n\nfunction SimpleTable(props) {\n  var classes = props.classes;\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Job Title\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Description\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Salary\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, rows.map(function (row) {\n    return React.createElement(TableRow, {\n      key: row.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, row.name), React.createElement(TableCell, {\n      numeric: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, row.JobTitle), React.createElement(TableCell, {\n      numeric: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, row.Description), React.createElement(TableCell, {\n      numeric: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, row.Salary));\n  }))));\n}\n\nSimpleTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SimpleTable)(MyPostJobs); // class MyPostJobs extends Component {\n//     constructor() {\n//         super();\n//     }\n// render() {\n//     return(\n//         <div>\n//             <table id='myTable' >\n//              <tr>\n//                  <th>JobTitle</th>\n//                  <th>____________</th>\n//                  <th>Salary</th>\n//                  <th>____________</th>\n//                  <th>Description</th>\n//              </tr>\n//             </table>\n//         </div>\n//     )\n// }\n// //} \n//export default MyPostJobs;","map":{"version":3,"sources":["/home/atif/hello-world/src/MyPostJobs.js"],"names":["React","Component","PropTypes","func","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","firebase","create","MyPostJobs","uid","auth","currentUser","rootRef","database","ref","speedRef","child","on","snap","userobj","val","key","Object","keys","setState","table","document","createElement","i","length","k","CompanyId","state","JobTitle","Description","s","styles","theme","root","width","marginTop","spacing","unit","overflowX","minWidth","id","createData","User","Salary","rows","SimpleTable","props","classes","map","row","name","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes, { func } from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport *as firebase from 'firebase'\nimport { create } from 'jss';\n\n\nclass MyPostJobs extends Component{\n\n    componentDidMount(){\n    var uid=firebase.auth().currentUser.uid;\n    const rootRef=firebase.database().ref();\n    const speedRef=rootRef.child('Job/');\n    speedRef.on('value',snap =>{\n        var userobj=snap.val();\n        var key=Object.keys(userobj);\n        this.setState({key})\n        var table=document.createElement('table');\n        for(var i=0; i<key.length;i++) {\n    var k=key[i];\n    if(uid==userobj[k].CompanyId) {\n        this.state.JobTitle[i]=userobj[k].JobTitle;\n        this.state.Description[i]=userobj[k].Description\n        this.s\n    }\n\n        }\n    }\n    )\n\n    }\n\n}\n\n\nconst styles=theme=> ({\n\n    \n\n\n     root: {\n         width: '100%',\n         marginTop: theme.spacing.unit *3,\n         overflowX: 'auto',\n\n     },\n\n     table: {\n         minWidth: 700, \n     },\n});\n\n\n\nlet id=0;\nfunction createData(User,JobTitle,Description,Salary) {\n    id+=1\n    return(id,JobTitle,Description,Salary);\n}\n\nconst rows= [\n    createData('JeddahSoft', this.state.JobTitle , this.state.Description, this.state.Salary ),\n    createData('Avanza', this.state.JobTitle , this.state.Description, this.state.Salary),\n    createData('xyz',this.state.JobTitle , this.state.Description, this.state.Salary)\n];\nfunction SimpleTable(props){\n    const {classes} =props;\n \nreturn (\n\n    <Paper className={classes.root}>\n    <Table className={classes.table}>\n      <TableHead>\n        <TableRow>\n          <TableCell>Job Title</TableCell>\n          <TableCell>Description</TableCell>\n          <TableCell>Salary</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {rows.map(row => {\n          return (\n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell numeric>{row.JobTitle}</TableCell>\n              <TableCell numeric>{row.Description}</TableCell>\n              <TableCell numeric>{row.Salary}</TableCell>\n              </TableRow>\n          );\n        })}\n      </TableBody>\n    </Table>\n  </Paper>\n);\n}\n\nSimpleTable.propTypes= {\n    classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SimpleTable)(MyPostJobs)\n\n\n\n// class MyPostJobs extends Component {\n//     constructor() {\n//         super();\n//     }\n// render() {\n//     return(\n//         <div>\n//             <table id='myTable' >\n//              <tr>\n//                  <th>JobTitle</th>\n//                  <th>____________</th>\n//                  <th>Salary</th>\n//                  <th>____________</th>\n//                  <th>Description</th>\n//              </tr>\n\n//             </table>\n//         </div>\n//     )\n// }\n\n// //} \n\n//export default MyPostJobs;"]},"metadata":{},"sourceType":"module"}