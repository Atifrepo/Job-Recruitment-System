{"ast":null,"code":"import _classCallCheck from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/atif/hello-world/src/ViewJobs.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport * as firebase from 'firebase';\nimport { join } from 'path';\n\nvar ViewStudents =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewStudents, _Component);\n\n  function ViewStudents() {\n    var _this;\n\n    _classCallCheck(this, ViewStudents);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewStudents).call(this));\n    _this.state = {\n      id: 0,\n      JobInfo: [{\n        JobTitle: '',\n        Description: '',\n        Salary: ''\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(ViewStudents, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // var uid = firebase.auth().currentUser.uid;\n      var rootRef = firebase.database().ref();\n      var speedeRef = rootRef.child('Job');\n      speedeRef.on('value', function (snap) {\n        var count = 0;\n        var userobj = snap.val();\n        var key = Object.keys(userobj);\n\n        for (var i = 0; i < key.length; i++) {\n          var k = key[i];\n          console.log(userobj[k].type);\n\n          if (userobj[k].type == 'student') {\n            if (userobj[k]) {\n              console.log(\"s\", userobj[k].e_mail);\n              _this2.state.e_mail[i] = {};\n              _this2.state.JobInfo[i].JobTitle = userobj[k].JobTitle;\n              _this2.state.JobInfo[i].Description = userobj[k].Description;\n              _this2.state.e_mail[i].GPA = userobj[k].Salary;\n            } else {\n              console.log(\"s\", userobj[i].e_mail);\n            } //this.state.name[i]=userobj[k],name;\n            //console.log(\"s\",userobj[k])\n\n          }\n        }\n\n        _this2.setState({\n          e_mail: _this2.state.e_mail\n        });\n      });\n    } // const rows = [\n    //   createData('e_mail' ),\n    // //   createData('Ice cream sandwich'),\n    // //   createData('Eclair'),\n    // //   createData('Cupcake'),\n    // //   createData('Gingerbread'),\n    // ];\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      // const { classes } = props;\n      console.log(\"email\", this.state.e_mail);\n      console.log(\"lName\", this.state.lName);\n      console.log(\"GPA\", this.state.GPA);\n      return React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Student Name\"), React.createElement(TableCell, {\n        numeric: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Email\"), React.createElement(TableCell, {\n        numeric: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Degree Title\"), React.createElement(TableCell, {\n        numeric: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"University Name\"), React.createElement(TableCell, {\n        numeric: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"From Date\"), React.createElement(TableCell, {\n        numeric: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"To Date\"), React.createElement(TableCell, {\n        numeric: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"GPA\"), React.createElement(TableCell, {\n        numeric: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Division\"), React.createElement(TableCell, {\n        numeric: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Enrollment Number\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.state.e_mail.map(function (row) {\n        return React.createElement(TableRow, {\n          key: row.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, row.lName), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, row.email), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, row.DegreeTitle, \" \"), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, row.UniversityName), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, row.FromDate), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, row.ToDate, \" \"), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, row.GPA), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, row.Division), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, row.EnrollmentNumber, \" \"));\n      }))));\n    }\n  }]);\n\n  return ViewStudents;\n}(Component);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      overflowX: 'auto'\n    },\n    table: {\n      minWidth: 700\n    }\n  };\n};\n\nexport default withStyles(styles)(ViewStudents);","map":{"version":3,"sources":["/home/atif/hello-world/src/ViewJobs.js"],"names":["React","Component","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","firebase","join","ViewStudents","state","id","JobInfo","JobTitle","Description","Salary","rootRef","database","ref","speedeRef","child","on","snap","count","userobj","val","key","Object","keys","i","length","k","console","log","type","e_mail","GPA","setState","lName","map","row","email","DegreeTitle","UniversityName","FromDate","ToDate","Division","EnrollmentNumber","styles","theme","root","width","marginTop","spacing","unit","overflowX","table","minWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport *as firebase from 'firebase';\nimport { join } from 'path';\nclass ViewStudents extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: 0,\n      JobInfo: [{ JobTitle: '', Description: '',Salary: '' }]\n    }\n  }\n  componentDidMount() {\n\n    // var uid = firebase.auth().currentUser.uid;\n    const rootRef = firebase.database().ref();\n    var speedeRef = rootRef.child('Job');\n    speedeRef.on('value', snap => {\n\n      var count = 0;\n      var userobj = snap.val();\n      var key = Object.keys(userobj);\n      for (var i = 0; i < key.length; i++) {\n        var k = key[i];\n\n        console.log(userobj[k].type);\n        if (userobj[k].type == 'student') {\n          if (userobj[k]) {\n            console.log(\"s\", userobj[k].e_mail)\n            this.state.e_mail[i] = {};\n\n            this.state.JobInfo[i].JobTitle = userobj[k].JobTitle;\n            this.state.JobInfo[i].Description = userobj[k].Description;\n            this.state.e_mail[i].GPA=userobj[k].Salary\n            \n          } else { console.log(\"s\", userobj[i].e_mail) }\n\n          //this.state.name[i]=userobj[k],name;\n          //console.log(\"s\",userobj[k])\n\n        }\n      }\n      this.setState({ e_mail: this.state.e_mail })\n\n\n    })\n  }\n\n\n\n\n\n  // const rows = [\n  //   createData('e_mail' ),\n  // //   createData('Ice cream sandwich'),\n  // //   createData('Eclair'),\n  // //   createData('Cupcake'),\n  // //   createData('Gingerbread'),\n  // ];\n\n  render() {\n    // const { classes } = props;\n    console.log(\"email\", this.state.e_mail)\n    console.log(\"lName\",this.state.lName)\n    console.log(\"GPA\",this.state.GPA)\n    return (\n\n      <Paper >\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Student Name</TableCell>\n              <TableCell numeric>Email</TableCell>\n              <TableCell numeric>Degree Title</TableCell>\n              <TableCell numeric>University Name</TableCell>\n              <TableCell numeric>From Date</TableCell>\n              <TableCell numeric>To Date</TableCell>\n              <TableCell numeric>GPA</TableCell>\n              <TableCell numeric>Division</TableCell>\n              <TableCell numeric>Enrollment Number</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.e_mail.map(row => {\n              return (\n                <TableRow key={row.id}>\n\n\n                  <TableCell >{row.lName}</TableCell>\n                  <TableCell >{row.email}</TableCell>\n                  <TableCell >{row.DegreeTitle} </TableCell>\n                  <TableCell >{row.UniversityName}</TableCell>\n                  <TableCell >{row.FromDate}</TableCell>\n                  <TableCell >{row.ToDate} </TableCell>\n                  <TableCell >{row.GPA}</TableCell>\n                  <TableCell >{row.Division}</TableCell>\n                  <TableCell >{row.EnrollmentNumber} </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </Paper>\n    )\n  }\n}\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n});\n\n\nexport default withStyles(styles)(ViewStudents)\n"]},"metadata":{},"sourceType":"module"}