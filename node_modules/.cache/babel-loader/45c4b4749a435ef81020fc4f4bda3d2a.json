{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { prefix } from './utils/bootstrapUtils';\nimport createChainedFunction from './utils/createChainedFunction';\nvar propTypes = {\n  onClick: PropTypes.func,\n\n  /**\n   * The toggle content, if left empty it will render the default toggle (seen above).\n   */\n  children: PropTypes.node\n};\nvar contextTypes = {\n  $bs_navbar: PropTypes.shape({\n    bsClass: PropTypes.string,\n    expanded: PropTypes.bool,\n    onToggle: PropTypes.func.isRequired\n  })\n};\n\nvar NavbarToggle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(NavbarToggle, _React$Component);\n\n  function NavbarToggle() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = NavbarToggle.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        onClick = _this$props.onClick,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"onClick\", \"className\", \"children\"]);\n\n    var navbarProps = this.context.$bs_navbar || {\n      bsClass: 'navbar'\n    };\n\n    var buttonProps = _extends({\n      type: 'button'\n    }, props, {\n      onClick: createChainedFunction(onClick, navbarProps.onToggle),\n      className: classNames(className, prefix(navbarProps, 'toggle'), !navbarProps.expanded && 'collapsed')\n    });\n\n    if (children) {\n      return React.createElement(\"button\", buttonProps, children);\n    }\n\n    return React.createElement(\"button\", buttonProps, React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, \"Toggle navigation\"), React.createElement(\"span\", {\n      className: \"icon-bar\"\n    }), React.createElement(\"span\", {\n      className: \"icon-bar\"\n    }), React.createElement(\"span\", {\n      className: \"icon-bar\"\n    }));\n  };\n\n  return NavbarToggle;\n}(React.Component);\n\nNavbarToggle.propTypes = propTypes;\nNavbarToggle.contextTypes = contextTypes;\nexport default NavbarToggle;","map":null,"metadata":{},"sourceType":"module"}