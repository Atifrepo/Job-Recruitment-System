{"ast":null,"code":"import _classCallCheck from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/atif/hello-world/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/atif/hello-world/src/MyPostJobs.js\";\n// import React, { Component } from 'react';\n// import PropTypes, { func } from 'prop-types';\n// import { withStyles } from '@material-ui/core/styles';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\n// import Paper from '@material-ui/core/Paper';\n// import *as firebase from 'firebase'\n// import { create } from 'jss';\n// class MyPostJobs extends Component {\n//     componentDidMount() {\n//         var uid = firebase.auth().currentUser.uid;\n//         const rootRef = firebase.database().ref();\n//         const speedRef = rootRef.child('Job/');\n//         speedRef.on('value', snap => {\n//             var userobj = snap.val();\n//             var key = Object.keys(userobj);\n//             this.setState({ key })\n//             for (var i = 0; i < key.length; i++) {\n//                 var k = key[i];\n//                 if (uid == userobj[k].CompanyId) {\n//                     this.state.JobTitle[i] = userobj[k].JobTitle;\n//                     this.state.Description[i] = userobj[k].Description;\n//                     this.state.Salary[i] = userobj[k].Salary;\n//                 }\n//             }\n//         }\n//         )\n//     }\n// }\n// const styles = theme => ({\n//     root: {\n//         width: '100%',\n//         marginTop: theme.spacing.unit * 3,\n//         overflowX: 'auto',\n//     },\n//     table: {\n//         minWidth: 700,\n//     },\n// });\n// let id = 0;\n// function createData(name, JobTitle, Description, Salary) {\n//     id += 1\n//     return (name, JobTitle, Description, Salary);\n// }\n// const rows = [\n//     createData('name', 'JobTitle', 'Description', 'Salary'),\n//     createData('name', 'JobTitle', 'Description', 'Salary'),\n//     createData('name', 'JobTitle', 'Description', 'Salary')\n// ];\n// function SimpleTable(props) {\n//     const { classes } = props;\n//     return (\n//         <Paper>\n//             <Table  >\n//                 <TableHead>\n//                     <TableRow>\n//                         <TableCell>Job Title</TableCell>\n//                         <TableCell>Description</TableCell>\n//                         <TableCell>Salary</TableCell>\n//                     </TableRow>\n//                 </TableHead>\n//                 <TableBody>\n//                     {rows.map(row => {\n//                         return (\n//                             <TableRow key={row.id}>\n//                                 <TableCell component=\"th\" scope=\"row\">\n//                                     {row.name}\n//                                 </TableCell>\n//                                 <TableCell numeric>{row.JobTitle}</TableCell>\n//                                 <TableCell numeric>{row.Description}</TableCell>\n//                                 <TableCell numeric>{row.Salary}</TableCell>\n//                             </TableRow>\n//                         );\n//                     })}\n//                 </TableBody>\n//             </Table>\n//         </Paper>\n//     );\n// }\n// SimpleTable.propTypes = {\n//     classes: PropTypes.object.isRequired\n// };\n// export default (withStyles)(SimpleTable)(MyPostJobs)\n// // class MyPostJobs extends Component {\n// //     constructor() {\n// //         super();\n// //     }\n// // render() {\n// //     return(\n// //         <div>\n// //             <table id='myTable' >\n// //              <tr>\n// //                  <th>JobTitle</th>\n// //                  <th>____________</th>\n// //                  <th>Salary</th>\n// //                  <th>____________</th>\n// //                  <th>Description</th>\n// //              </tr>\n// //             </table>\n// //         </div>\n// //     )\n// // }\n// // //} \n// //export default MyPostJobs;\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nvar MyPostJobs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyPostJobs, _Component);\n\n  function MyPostJobs() {\n    _classCallCheck(this, MyPostJobs);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyPostJobs).apply(this, arguments));\n  }\n\n  _createClass(MyPostJobs, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var uid = firebase.auth().currentUser.uid;\n      var rootRef = firebase.database().ref();\n    }\n  }]);\n\n  return MyPostJobs;\n}(Component);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      overflowX: 'auto'\n    },\n    table: {\n      minWidth: 700\n    }\n  };\n};\n\nvar id = 0;\n\nfunction createData(name, calories, fat, carbs, protein) {\n  id += 1;\n  return {\n    id: id,\n    name: name,\n    calories: calories,\n    fat: fat,\n    carbs: carbs,\n    protein: protein\n  };\n}\n\nvar rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\n\nfunction SimpleTable(props) {\n  var classes = props.classes;\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"Company Name\"), React.createElement(TableCell, {\n    numeric: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"Job Title\"), React.createElement(TableCell, {\n    numeric: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"Description (g)\"), React.createElement(TableCell, {\n    numeric: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Salary (g)\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, rows.map(function (row) {\n    return React.createElement(TableRow, {\n      key: row.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, row.name), React.createElement(TableCell, {\n      numeric: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, row.calories), React.createElement(TableCell, {\n      numeric: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, row.fat), React.createElement(TableCell, {\n      numeric: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, row.carbs), React.createElement(TableCell, {\n      numeric: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, row.protein));\n  }))));\n}\n\nSimpleTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SimpleTable);","map":{"version":3,"sources":["/home/atif/hello-world/src/MyPostJobs.js"],"names":["React","Component","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","MyPostJobs","uid","firebase","auth","currentUser","rootRef","database","ref","styles","theme","root","width","marginTop","spacing","unit","overflowX","table","minWidth","id","createData","name","calories","fat","carbs","protein","rows","SimpleTable","props","classes","map","row","propTypes","object","isRequired"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAGA;AAKA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAKA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;IAGMC,U;;;;;;;;;;;;;wCACiB;AACX,UAAIC,GAAG,GAACC,QAAQ,CAACC,IAAT,GAAgBC,WAAhB,CAA4BH,GAApC;AACA,UAAMI,OAAO,GAACH,QAAQ,CAACI,QAAT,GAAoBC,GAApB,EAAd;AACP;;;;EAJoBhB,S;;AAQzB,IAAMiB,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAE,MADL;AAEFC,MAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAcC,IAAd,GAAqB,CAF9B;AAGFC,MAAAA,SAAS,EAAE;AAHT,KADe;AAMrBC,IAAAA,KAAK,EAA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","sourcesContent":["// import React, { Component } from 'react';\n// import PropTypes, { func } from 'prop-types';\n// import { withStyles } from '@material-ui/core/styles';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\n// import Paper from '@material-ui/core/Paper';\n// import *as firebase from 'firebase'\n// import { create } from 'jss';\n\n\n// class MyPostJobs extends Component {\n\n//     componentDidMount() {\n//         var uid = firebase.auth().currentUser.uid;\n//         const rootRef = firebase.database().ref();\n//         const speedRef = rootRef.child('Job/');\n//         speedRef.on('value', snap => {\n//             var userobj = snap.val();\n//             var key = Object.keys(userobj);\n//             this.setState({ key })\n//             for (var i = 0; i < key.length; i++) {\n//                 var k = key[i];\n//                 if (uid == userobj[k].CompanyId) {\n//                     this.state.JobTitle[i] = userobj[k].JobTitle;\n//                     this.state.Description[i] = userobj[k].Description;\n//                     this.state.Salary[i] = userobj[k].Salary;\n\n//                 }\n\n//             }\n//         }\n//         )\n\n//     }\n\n// }\n\n\n// const styles = theme => ({\n\n\n\n\n//     root: {\n//         width: '100%',\n//         marginTop: theme.spacing.unit * 3,\n//         overflowX: 'auto',\n\n//     },\n\n//     table: {\n//         minWidth: 700,\n//     },\n// });\n\n\n\n// let id = 0;\n// function createData(name, JobTitle, Description, Salary) {\n//     id += 1\n//     return (name, JobTitle, Description, Salary);\n// }\n\n// const rows = [\n//     createData('name', 'JobTitle', 'Description', 'Salary'),\n//     createData('name', 'JobTitle', 'Description', 'Salary'),\n//     createData('name', 'JobTitle', 'Description', 'Salary')\n// ];\n// function SimpleTable(props) {\n//     const { classes } = props;\n\n//     return (\n\n//         <Paper>\n//             <Table  >\n//                 <TableHead>\n//                     <TableRow>\n//                         <TableCell>Job Title</TableCell>\n//                         <TableCell>Description</TableCell>\n//                         <TableCell>Salary</TableCell>\n//                     </TableRow>\n//                 </TableHead>\n//                 <TableBody>\n//                     {rows.map(row => {\n//                         return (\n//                             <TableRow key={row.id}>\n//                                 <TableCell component=\"th\" scope=\"row\">\n//                                     {row.name}\n//                                 </TableCell>\n//                                 <TableCell numeric>{row.JobTitle}</TableCell>\n//                                 <TableCell numeric>{row.Description}</TableCell>\n//                                 <TableCell numeric>{row.Salary}</TableCell>\n//                             </TableRow>\n//                         );\n//                     })}\n//                 </TableBody>\n//             </Table>\n//         </Paper>\n//     );\n// }\n\n// SimpleTable.propTypes = {\n//     classes: PropTypes.object.isRequired\n// };\n// export default (withStyles)(SimpleTable)(MyPostJobs)\n\n\n// // class MyPostJobs extends Component {\n// //     constructor() {\n// //         super();\n// //     }\n// // render() {\n// //     return(\n// //         <div>\n// //             <table id='myTable' >\n// //              <tr>\n// //                  <th>JobTitle</th>\n// //                  <th>____________</th>\n// //                  <th>Salary</th>\n// //                  <th>____________</th>\n// //                  <th>Description</th>\n// //              </tr>\n\n// //             </table>\n// //         </div>\n// //     )\n// // }\n\n// // //} \n\n// //export default MyPostJobs;\n\n\n\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\nclass MyPostJobs extends Component {\n    componentDidMount(){\n            var uid=firebase.auth().currentUser.uid;\n            const rootRef=firebase.database().ref()\n    }\n}\n\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n});\n\nlet id = 0;\nfunction createData(name, calories, fat, carbs, protein) {\n    id += 1;\n    return { id, name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nfunction SimpleTable(props) {\n    const { classes } = props;\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Company Name</TableCell>\n                        <TableCell numeric>Job Title</TableCell>\n                        <TableCell numeric>Description (g)</TableCell>\n                        <TableCell numeric>Salary (g)</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => {\n                        return (\n                            <TableRow key={row.id}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.name}\n                                </TableCell>\n                                <TableCell numeric>{row.calories}</TableCell>\n                                <TableCell numeric>{row.fat}</TableCell>\n                                <TableCell numeric>{row.carbs}</TableCell>\n                                <TableCell numeric>{row.protein}</TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n}\n\nSimpleTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleTable);"]},"metadata":{},"sourceType":"module"}