{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      height: 56,\n      backgroundColor: theme.palette.background.paper\n    }\n  };\n};\n\nexports.styles = styles;\n\nfunction BottomNavigation(props) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      onChange = props.onChange,\n      showLabels = props.showLabels,\n      value = props.value,\n      other = (0, _objectWithoutProperties2.default)(props, [\"children\", \"classes\", \"className\", \"onChange\", \"showLabels\", \"value\"]);\n  var className = (0, _classnames.default)(classes.root, classNameProp);\n\n  var children = _react.default.Children.map(childrenProp, function (child, childIndex) {\n    if (!_react.default.isValidElement(child)) {\n      return null;\n    }\n\n    process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(child.type !== _react.default.Fragment, [\"Material-UI: the BottomNavigation component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n')) : void 0;\n    var childValue = child.props.value === undefined ? childIndex : child.props.value;\n    return _react.default.cloneElement(child, {\n      selected: childValue === value,\n      showLabel: child.props.showLabel !== undefined ? child.props.showLabel : showLabels,\n      value: childValue,\n      onChange: onChange\n    });\n  });\n\n  return _react.default.createElement(\"div\", (0, _extends2.default)({\n    className: className\n  }, other), children);\n}\n\nBottomNavigation.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value We default to the index of the child\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * If `true`, all `BottomNavigationAction`s will show their labels.\n   * By default, only the selected `BottomNavigationAction` will show its label.\n   */\n  showLabels: _propTypes.default.bool,\n\n  /**\n   * The value of the currently selected `BottomNavigationAction`.\n   */\n  value: _propTypes.default.any\n} : {};\nBottomNavigation.defaultProps = {\n  showLabels: false\n};\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiBottomNavigation'\n})(BottomNavigation);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}