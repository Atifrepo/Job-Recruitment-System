{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _simpleAssign = require('simple-assign');\n\nvar _simpleAssign2 = _interopRequireDefault(_simpleAssign);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _EnhancedButton = require('../internal/EnhancedButton');\n\nvar _EnhancedButton2 = _interopRequireDefault(_EnhancedButton);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getStyles(props, context) {\n  var selected = props.selected;\n  var bottomNavigation = context.muiTheme.bottomNavigation;\n  var color = selected ? bottomNavigation.selectedColor : bottomNavigation.unselectedColor;\n  var styles = {\n    root: {\n      transition: 'padding-top 0.3s',\n      paddingTop: selected ? 6 : 8,\n      paddingBottom: 10,\n      paddingLeft: 12,\n      paddingRight: 12,\n      minWidth: 80,\n      maxWidth: 168\n    },\n    label: {\n      fontSize: selected ? bottomNavigation.selectedFontSize : bottomNavigation.unselectedFontSize,\n      transition: 'color 0.3s, font-size 0.3s',\n      color: color\n    },\n    icon: {\n      display: 'block',\n\n      /**\n       * Used to ensure SVG icons are centered\n       */\n      width: '100%'\n    },\n    iconColor: color\n  };\n  return styles;\n}\n\nvar BottomNavigationItem = function BottomNavigationItem(props, context) {\n  var label = props.label,\n      icon = props.icon,\n      style = props.style,\n      other = (0, _objectWithoutProperties3.default)(props, ['label', 'icon', 'style']);\n  var prepareStyles = context.muiTheme.prepareStyles;\n  var styles = getStyles(props, context);\n  var styledIcon = (0, _react.cloneElement)(icon, {\n    style: (0, _simpleAssign2.default)({}, styles.icon, icon.props.style),\n    color: icon.props.color || styles.iconColor\n  });\n  return _react2.default.createElement(_EnhancedButton2.default, (0, _extends3.default)({}, other, {\n    style: (0, _simpleAssign2.default)({}, styles.root, style)\n  }), styledIcon, _react2.default.createElement('div', {\n    style: prepareStyles(styles.label)\n  }, label));\n};\n\nBottomNavigationItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Set the icon representing the view for this item.\n   */\n  icon: _propTypes2.default.node,\n\n  /**\n   * Set the label describing the view for this item.\n   */\n  label: _propTypes2.default.node,\n\n  /**\n   * @ignore\n   * Override the inline-styles of the root element.\n   */\n  style: _propTypes2.default.object\n} : {};\nBottomNavigationItem.contextTypes = {\n  muiTheme: _propTypes2.default.object.isRequired\n};\nexports.default = BottomNavigationItem;","map":null,"metadata":{},"sourceType":"script"}